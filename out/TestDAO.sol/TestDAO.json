{
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "metadataHash",
          "type": "bytes"
        },
        {
          "name": "timeCreated",
          "type": "uint256"
        },
        {
          "name": "votingDeadline",
          "type": "uint256"
        },
        {
          "name": "finalized",
          "type": "bool"
        },
        {
          "name": "proposalPassed",
          "type": "bool"
        },
        {
          "name": "numberOfVotes",
          "type": "uint256"
        },
        {
          "name": "proposalHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatesByDelegator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedDelegatingTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        }
      ],
      "name": "countVotes",
      "outputs": [
        {
          "name": "yea",
          "type": "uint256"
        },
        {
          "name": "nay",
          "type": "uint256"
        },
        {
          "name": "quorum",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sharesTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedAmountsByDelegate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "shareholder",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokensToLock",
          "type": "uint256"
        },
        {
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "setDelegateAndLockTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "clearDelegateAndUnlockTokens",
      "outputs": [
        {
          "name": "lockedTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "debatingPeriodInMinutes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minimumSharesToPassAVote",
          "type": "uint256"
        },
        {
          "name": "minutesForDebate",
          "type": "uint256"
        },
        {
          "name": "sharesToBeBoardMember",
          "type": "uint256"
        }
      ],
      "name": "changeVotingRules",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumQuorum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenLocker",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requiredSharesToBeBoardMember",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "name": "voteID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "name": "jobMetadataHash",
          "type": "bytes"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "newProposal",
      "outputs": [
        {
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "checkProposalCode",
      "outputs": [
        {
          "name": "codeChecksOut",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalLockedTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "sharesAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "metadataHash",
          "type": "bytes"
        }
      ],
      "name": "ProposalAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "yea",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "quorum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "ProposalTallied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newMinimumQuorum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newDebatingPeriodInMinutes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newSharesTokenAddress",
          "type": "address"
        }
      ],
      "name": "ChangeOfRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "TokensDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "TokensUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ReceivedTokens",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051602080611f72833981016040525160048054600160a060020a031916600160a060020a038316179055686c6b935b8bbd400000600955683635c9adc5dea000006000908155600155806100656100b9565b600160a060020a03909116815260405190819003602001906000f080158015610092573d6000803e3d6000fd5b50600a8054600160a060020a031916600160a060020a0392909216919091179055506100c9565b60405161028c80611ce683390190565b611c0e806100d86000396000f30060806040526004361061013d5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663013cf08b811461017e578063064cc7a71461025c57806306fdde031461029957806306fde1691461032357806313f47f241461034a5780631840f0ca1461036b578063237e9492146103a157806327ebcf0e146104015780633fb3ec2814610416578063400e394914610437578063438596321461044c5780635b7f415c146104845780635fa7df6b14610499578063645bd436146104bd57806369bd3436146104d25780636e676b69146104e75780638160f0b5146105055780638f4ffcb11461051a578063a80bf3e61461058a578063b94fa03f1461059f578063c9d27afe146105b4578063dbc45228146105d1578063eceb294514610678578063f5c476f9146106e7575b604080513481529051600160a060020a033316917fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1919081900360200190a2005b34801561018a57600080fd5b506101966004356106fc565b60408051600160a060020a038b16815260208082018b9052606082018990526080820188905286151560a083015285151560c083015260e0820185905261010082018490526101209282018381528a519383019390935289519192916101408401918b019080838360005b83811015610219578181015183820152602001610201565b50505050905090810190601f1680156102465780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561026857600080fd5b5061027d600160a060020a03600435166107f1565b60408051600160a060020a039092168252519081900360200190f35b3480156102a557600080fd5b506102ae61080c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102e85781810151838201526020016102d0565b50505050905090810190601f1680156103155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032f57600080fd5b50610338610843565b60408051918252519081900360200190f35b34801561035657600080fd5b50610338600160a060020a0360043516610850565b34801561037757600080fd5b50610383600435610862565b60408051938452602084019290925282820152519081900360600190f35b3480156103ad57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526103ff9583359536956044949193909101919081908401838280828437509497506109c39650505050505050565b005b34801561040d57600080fd5b5061027d610c16565b34801561042257600080fd5b50610338600160a060020a0360043516610c25565b34801561044357600080fd5b50610338610c37565b34801561045857600080fd5b50610470600435600160a060020a0360243516610c3d565b604080519115158252519081900360200190f35b34801561049057600080fd5b50610338610c85565b3480156104a557600080fd5b506103ff600435600160a060020a0360243516610c8a565b3480156104c957600080fd5b50610338610f77565b3480156104de57600080fd5b506103386111da565b3480156104f357600080fd5b506103ff6004356024356044356111e0565b34801561051157600080fd5b5061033861126b565b34801561052657600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526103ff94600160a060020a038135811695602480359660443590931695369560849492019181908401838280828437509497506112719650505050505050565b34801561059657600080fd5b5061027d6113d8565b3480156105ab57600080fd5b506103386113e7565b3480156105c057600080fd5b5061033860043560243515156113ed565b3480156105dd57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610338948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506116219650505050505050565b34801561068457600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261047094803594600160a060020a0360248035919091169560443595369560849493019181908401838280828437509497506118f19650505050505050565b3480156106f357600080fd5b506103386119b3565b600280548290811061070a57fe5b6000918252602091829020600a91909102018054600180830154600280850180546040805161010096831615969096026000190190911692909204601f8101889004880285018801909252818452600160a060020a03909416965090949192918301828280156107bb5780601f10610790576101008083540402835291602001916107bb565b820191906000526020600020905b81548152906001019060200180831161079e57829003601f168201915b5050505060038301546004840154600585015460068601546007909601549495929491935060ff80821693610100909204169189565b600560205260009081526040902054600160a060020a031681565b60408051808201909152600881527f546573742044414f000000000000000000000000000000000000000000000000602082015281565b686c6b935b8bbd40000081565b60066020526000908152604090205481565b600080600080600080600060028881548110151561087c57fe5b90600052602060002090600a02019350600096506000955060009450600092505b60088401548310156109b857600884018054849081106108b957fe5b60009182526020808320600480549390910180546040805160e060020a6370a08231028152600160a060020a0361010090930483169481019490945251919750610976959416936370a0823193602480850194919392918390030190829087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b505050506040513d602081101561095057600080fd5b505183546101009004600160a060020a03166000908152600760205260409020546119b9565b905061098285826119b9565b825490955060ff16156109a05761099987826119b9565b96506109ad565b6109aa86826119b9565b95505b82600101925061089d565b505050509193909250565b60008060008030600160a060020a031633600160a060020a0316141515156109ea57600080fd5b60028054879081106109f857fe5b90600052602060002090600a0201935083600401544210158015610a215750600584015460ff16155b8015610abf5750835460018501546040516c01000000000000000000000000600160a060020a039093169283028152601481018290528751889190603482019060208401908083835b60208310610a895780518252601f199092019160209182019101610a6a565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060078a0154149450505050505b1515610aca57600080fd5b610ad386610862565b6000549295509093509150811015610aea57600080fd5b60058401805460ff1916600117905581831115610ba45760058401805461ff001916610100179055835460018501546040518751600160a060020a03909316928891908190602084019080838360005b83811015610b52578181015183820152602001610b3a565b50505050905090810190601f168015610b7f5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050501515610b9f57600080fd5b610bb2565b60058401805461ff00191690555b600584015460408051888152602081018690528082018590526060810184905261010090920460ff1615156080830152517f748f0810c68633063bb13f3c71e10cd1889925b3721d6e567114d0632574a3969160a0908290030190a1505050505050565b600454600160a060020a031681565b60076020526000908152604090205481565b60035481565b600080600284815481101515610c4f57fe5b60009182526020808320600160a060020a03969096168352600a919091029094016009019093525050604090205460ff16919050565b601281565b600480546040805160e060020a6370a08231028152600160a060020a03338116948201949094529051600093909216916370a082319160248082019260209290919082900301818787803b158015610ce157600080fd5b505af1158015610cf5573d6000803e3d6000fd5b505050506040513d6020811015610d0b57600080fd5b505111610d1757600080fd5b600160a060020a033381166000908152600560205260409020541615610d3c57600080fd5b30600160a060020a031633600160a060020a031614151515610d5d57600080fd5b600160a060020a0333811660009081526006602090815260408083208690559284168252600790522054610d9190836119b9565b600160a060020a038216600090815260076020526040902055600854610db790836119b9565b60085533600160a060020a039081166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191687871617905560048054600a5483517f23b872dd00000000000000000000000000000000000000000000000000000000815292830196909652948616602482015260448101889052905193909416936323b872dd9360648083019491928390030190829087803b158015610e6357600080fd5b505af1158015610e77573d6000803e3d6000fd5b505050506040513d6020811015610e8d57600080fd5b50511515610e9a57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b158015610ef257600080fd5b505af1158015610f06573d6000803e3d6000fd5b505050506040513d6020811015610f1c57600080fd5b505114610f2857600080fd5b80600160a060020a031633600160a060020a03167f57593c23286b632d1ba413b24ecae252f34f6b81fdff1022dc7ac0d78cde56b7846040518082815260200191505060405180910390a35050565b600160a060020a0333811660009081526005602052604081205490918291161515610fa157600080fd5b30600160a060020a031633600160a060020a031614151515610fc257600080fd5b5050600160a060020a0333811660009081526005602090815260408083205460068352818420805490859055941680845260079092529091205461100690836119cc565b600160a060020a03821660009081526007602052604090205560085461102c90836119cc565b600855600160a060020a033381166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19169055600a5481517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019590955260248501889052905194169363a9059cbb93604480820194918390030190829087803b1580156110c557600080fd5b505af11580156110d9573d6000803e3d6000fd5b505050506040513d60208110156110ef57600080fd5b505115156110fc57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b15801561115457600080fd5b505af1158015611168573d6000803e3d6000fd5b505050506040513d602081101561117e57600080fd5b50511461118a57600080fd5b80600160a060020a031633600160a060020a03167fccc924ef18d5fcabbf624302b6a02f9014c9b3371994eacc0cec2c107f2503e4846040518082815260200191505060405180910390a35b5090565b60015481565b30600160a060020a031633600160a060020a031614151561120057600080fd5b82151561120c57600192505b6000839055600182905560098190556004546040805185815260208101859052600160a060020a0390921682820152517f68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c99181900360600190a1505050565b60005481565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152308116602483015260448201869052915184928316916323b872dd9160648083019260209291908290030181600087803b1580156112e557600080fd5b505af11580156112f9573d6000803e3d6000fd5b505050506040513d602081101561130f57600080fd5b5051151561131c57600080fd5b82600160a060020a031685600160a060020a03167fd65b48fd35864b3528d38e44760be5553248f89bf3ff6b06cca57817cc2650bf86856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561139657818101518382015260200161137e565b50505050905090810190601f1680156113c35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35050505050565b600a54600160a060020a031681565b60095481565b6000806000600460009054906101000a9004600160a060020a0316600160a060020a03166370a08231336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561147b57600080fd5b505af115801561148f573d6000803e3d6000fd5b505050506040513d60208110156114a557600080fd5b5051116114b157600080fd5b30600160a060020a031633600160a060020a0316141515156114d257600080fd5b60028054859081106114e057fe5b60009182526020808320600160a060020a03331684526009600a90930201918201905260409091205490915060ff1615156001141561151e57600080fd5b6008810180549061153290600183016119de565b91506040805190810160405280841515815260200133600160a060020a0316815250816008018381548110151561156557fe5b600091825260208083208451920180549482015160ff199586169315159390931774ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03948516021790553390911680835260098501825260409283902080549094166001908117909455928501600685015581518781528615159181019190915280820192909252517f86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0916060908290030190a15092915050565b600954600480546040805160e060020a6370a08231028152600160a060020a033381169482019490945290516000948594909316916370a0823191602480830192602092919082900301818887803b15801561167c57600080fd5b505af1158015611690573d6000803e3d6000fd5b505050506040513d60208110156116a657600080fd5b505110156116b357600080fd5b30600160a060020a031633600160a060020a0316141515156116d457600080fd5b600a54600160a060020a03878116911614156116ef57600080fd5b60028054906117019060018301611a07565b915060028281548110151561171257fe5b6000918252602091829020600a9190910201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03891617815560018101879055855190925061176891600284019190870190611a33565b508585846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106117c85780518252601f1990920191602091820191016117a9565b51815160209384036101000a60001901801990921691161790526040805192909401829003822060078a01554260038a01819055600154603c020160048a015560058901805461ffff19169055600060068a018190558a8352600160a060020a038f16838301529382018d90526080606083018181528d51918401919091528c517f06d6b095e85f5218421975622a7aee84a98b32aa7d174b90088357014003b43399508b98508f97508e96508d95939450909260a0850192860191908190849084905b838110156118a457818101518382015260200161188c565b50505050905090810190601f1680156118d15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16001820160035550949350505050565b60008060028681548110151561190357fe5b90600052602060002090600a020190508484846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106119725780518252601f199092019160209182019101611953565b5181516000196020949094036101000a9390930192831692191691909117905260405192018290039091206007870154149650505050505050949350505050565b60085481565b818101828110156119c657fe5b92915050565b6000828211156119d857fe5b50900390565b815481835581811115611a0257600083815260209020611a02918101908301611aad565b505050565b815481835581811115611a0257600a0281600a028360005260206000209182019101611a029190611ae2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a7457805160ff1916838001178555611aa1565b82800160010185558215611aa1579182015b82811115611aa1578251825591602001919060010190611a86565b506111d6929150611b63565b611adf91905b808211156111d657805474ffffffffffffffffffffffffffffffffffffffffff19168155600101611ab3565b90565b611adf91905b808211156111d657805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055611b216002830182611b7d565b6000600383018190556004830181905560058301805461ffff191690556006830181905560078301819055611b5a906008840190611bc4565b50600a01611ae8565b611adf91905b808211156111d65760008155600101611b69565b50805460018160011615610100020316600290046000825580601f10611ba35750611bc1565b601f016020900490600052602060002090810190611bc19190611b63565b50565b5080546000825590600052602060002090810190611bc19190611aad5600a165627a7a723058207f6cf1fcc0674bf848427c7d0794e5844259f97dd19fc34db56d2291739d1dba0029608060405234801561001057600080fd5b5060405160208061028c833981016040525160008054600160a060020a03338116600160a060020a0319928316179092556001805492909316911617905561022f8061005d6000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063a9059cbb14610099578063fc0c546a146100de575b600080fd5b34801561006757600080fd5b506100706100f3565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100a557600080fd5b506100ca73ffffffffffffffffffffffffffffffffffffffff6004351660243561010f565b604080519115158252519081900360200190f35b3480156100ea57600080fd5b506100706101e7565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600080543373ffffffffffffffffffffffffffffffffffffffff90811691161461013857600080fd5b600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156101b457600080fd5b505af11580156101c8573d6000803e3d6000fd5b505050506040513d60208110156101de57600080fd5b50519392505050565b60015473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058203dc71273b632dc9df1db59d7791bcdf8bbe67a71447b897ee2731de4d210c5080029",
    "sourceMap": "244:598:1:-;;;525:314;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:314:1;;;;;;;;;;;;;576:18;:34;;-1:-1:-1;;;;;;576:34:1;-1:-1:-1;;;;;576:34:1;;;;;474:17;620:29;:66;712:29;-1:-1:-1;696:45:1;;;-1:-1:-1;751:27:1;525:314;802:30;;:::i;:::-;-1:-1:-1;;;;;802:30:1;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;788:11:1;:44;;-1:-1:-1;;;;;;788:44:1;-1:-1:-1;;;;;788:44:1;;;;;;;;;;-1:-1:-1;244:598:1;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "244:598:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:36:14;;;1117:9;1091:36;;;;-1:-1:-1;;;;;1105:10:14;1091:36;;;;;;;;;;;;244:598:1;3591:27:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3591:27:16;;;;;;;;;-1:-1:-1;;;;;3591:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3591:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3735:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3735:56:16;-1:-1:-1;;;;;3735:56:16;;;;;;;;;-1:-1:-1;;;;;3735:56:16;;;;;;;;;;;;;;303:40:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;303:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;416:75:1;;;;;;;;;;;;;;;;;;;;3836:55:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3836:55:16;-1:-1:-1;;;;;3836:55:16;;;;;14116:662;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14116:662:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15060:1252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15060:1252:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15060:1252:16;;-1:-1:-1;15060:1252:16;;-1:-1:-1;;;;;;;15060:1252:16;;;3654:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3654:31:16;;;;3937:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3937:59:16;-1:-1:-1;;;;;3937:59:16;;;;;3624:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3624:24:16;;;;13690:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13690:187:16;;;-1:-1:-1;;;;;13690:187:16;;;;;;;;;;;;;;;;;;;;;;;350:60:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:60:1;;;;7062:698:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7062:698:16;;;-1:-1:-1;;;;;7062:698:16;;;;;8150:788;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8150:788:16;;;;3550:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3550:35:16;;;;9645:503;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9645:503:16;;;;;;;;;3519:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3519:25:16;;;;732:244:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;732:244:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;732:244:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;732:244:14;;-1:-1:-1;732:244:14;;-1:-1:-1;;;;;;;732:244:14;4235:30:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4235:30:16;;;;4154:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4154:41:16;;;;12822:559;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12822:559:16;;;;;;;;;10748:992;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10748:992:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10748:992:16;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10748:992:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10748:992:16;;;;-1:-1:-1;10748:992:16;-1:-1:-1;10748:992:16;;-1:-1:-1;10748:992:16;;;;;;;;-1:-1:-1;10748:992:16;;-1:-1:-1;10748:992:16;;-1:-1:-1;;;;;;;10748:992:16;12030:371;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12030:371:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12030:371:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12030:371:16;;-1:-1:-1;12030:371:16;;-1:-1:-1;;;;;;;12030:371:16;4061:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4061:29:16;;;;3591:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3591:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3591:27:16;;;;-1:-1:-1;3591:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3591:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3591:27:16;;;;;;;;;;;;:::o;3735:56::-;;;;;;;;;;;;-1:-1:-1;;;;;3735:56:16;;:::o;303:40:1:-;;;;;;;;;;;;;;;;;;;:::o;416:75::-;474:17;416:75;:::o;3836:55:16:-;;;;;;;;;;;;;:::o;14116:662::-;14178:8;14188;14198:11;14221:18;14336:6;14387:14;14428:15;14242:9;14252:14;14242:25;;;;;;;;;;;;;;;;;;;;14221:46;;14283:1;14277:7;;14300:1;14294:7;;14320:1;14311:10;;14345:1;14336:10;;14331:441;14352:7;;;:14;14348:18;;14331:441;;;14404:7;;;:10;;14412:1;;14404:10;;;;;;;;;;;;;;14459:18;;;14404:10;;;;14488:7;;14459:37;;;-1:-1:-1;;;;;14459:37:16;;-1:-1:-1;;;;;14459:18:16;14488:7;;;;;14459:37;;;;;;;;14404:10;;-1:-1:-1;14446:88:16;;14459:18;;;:28;;:37;;;;;14404:10;;14459:37;;;;;;;;;:18;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;14459:37:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14459:37:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14459:37:16;14525:7;;;;;-1:-1:-1;;;;;14525:7:16;14498:35;;;;:26;14459:37;14498:35;;;;;14446:12;:88::i;:::-;14428:106;;14557:32;14570:6;14578:10;14557:12;:32::i;:::-;14607:11;;14548:41;;-1:-1:-1;14607:11:16;;14603:159;;;14644:29;14657:3;14662:10;14644:12;:29::i;:::-;14638:35;;14603:159;;;14718:29;14731:3;14736:10;14718:12;:29::i;:::-;14712:35;;14603:159;14368:3;;;;;14331:441;;;14116:662;;;;;;;;;:::o;15060:1252::-;15178:18;15496:8;15514;15532:11;5807:4;-1:-1:-1;;;;;5785:27:16;:10;-1:-1:-1;;;;;5785:27:16;;;5777:36;;;;;;;;15199:9;:25;;15209:14;;15199:25;;;;;;;;;;;;;;;;15178:46;;15345:1;:16;;;15338:3;:23;;15337:41;;;;-1:-1:-1;15367:11:16;;;;;;15366:12;15337:41;:116;;;;-1:-1:-1;15410:11:16;;;15423:8;;;15400:53;;;-1:-1:-1;;;;;15410:11:16;;;15400:53;;;;;;;;;;;;;15433:19;;15400:53;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;15400:53:16;;;;;;;;;;15382:14;;;;:71;;-1:-1:-1;;;;;15337:116:16;15329:125;;;;;;;;15576:26;15587:14;15576:10;:26::i;:::-;15777:13;;15553:49;;-1:-1:-1;15553:49:16;;-1:-1:-1;15553:49:16;-1:-1:-1;15767:23:16;;;15759:32;;;;;;15855:11;;;:18;;-1:-1:-1;;15855:18:16;15869:4;15855:18;;;15888:9;;;15884:314;;;15956:16;;;:23;;-1:-1:-1;;15956:23:16;;;;;16042:11;;15975:4;16065:8;;;16042:53;;;;-1:-1:-1;;;;;16042:11:16;;;;16075:19;;16042:53;;;;;;;;;;15956:23;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16042:53:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16034:62;;;;;;;;15884:314;;;16163:16;;;:24;;-1:-1:-1;;16163:24:16;;;15884:314;16288:16;;;;16238:67;;;;;;;;;;;;;;;;;;;;;;;;16288:16;;;;;;16238:67;;;;;;;;;;;;;;;;;15060:1252;;;;;;:::o;3654:31::-;;;-1:-1:-1;;;;;3654:31:16;;:::o;3937:59::-;;;;;;;;;;;;;:::o;3624:24::-;;;;:::o;13690:187::-;13771:4;13787:18;13808:9;13818:14;13808:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13850:20:16;;;;;;13808:25;;;;;;;;13850:7;;:20;;;-1:-1:-1;;13850:20:16;;;;;;;13690:187;-1:-1:-1;13690:187:16:o;350:60:1:-;408:2;350:60;:::o;7062:698:16:-;5405:18;;;5399:47;;;-1:-1:-1;;;;;5399:47:16;;-1:-1:-1;;;;;5435:10:16;5399:47;;;;;;;;;;;-1:-1:-1;;5405:18:16;;;;5399:35;;:47;;;;;;;;;;;;;;;-1:-1:-1;5405:18:16;5399:47;;;5:2:-1;;;;30:1;27;20:12;5:2;5399:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5399:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5399:47:16;:51;5391:60;;;;;;-1:-1:-1;;;;;6006:10:16;5985:32;;6029:1;5985:32;;;:20;:32;;;;;;;:46;5977:55;;;;;;5807:4;-1:-1:-1;;;;;5785:27:16;:10;-1:-1:-1;;;;;5785:27:16;;;5777:36;;;;;;;;-1:-1:-1;;;;;7250:10:16;7227:34;;;;;;:22;:34;;;;;;;;:49;;;7338:36;;;;;:26;:36;;;;7325:64;;7264:12;7325;:64::i;:::-;-1:-1:-1;;;;;7286:36:16;;;;;;:26;:36;;;;;:103;7432:17;;7419:45;;7451:12;7419;:45::i;:::-;7399:17;:65;7495:10;-1:-1:-1;;;;;7474:32:16;;;;;;;:20;:32;;;;;;;;:43;;-1:-1:-1;;7474:43:16;;;;;;;7535:18;;;7579:11;;7535:70;;;;;;;;;;;;7579:11;;;7535:70;;;;;;;;;;;;:18;;;;;:31;;:70;;;;;;;;;;;;;;:18;:70;;;5:2:-1;;;;30:1;27;20:12;5:2;7535:70:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7535:70:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7535:70:16;7527:79;;;;;;;;7669:17;;7624:18;;;7653:11;;7624:41;;;-1:-1:-1;;;;;7624:41:16;;-1:-1:-1;;;;;7653:11:16;;;7624:41;;;;;;;;:18;;;:28;;:41;;;;;;;;;;;;;;:18;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;7624:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7624:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7624:41:16;:62;7616:71;;;;;;7744:8;-1:-1:-1;;;;;7702:51:16;7718:10;-1:-1:-1;;;;;7702:51:16;;7730:12;7702:51;;;;;;;;;;;;;;;;;;7062:698;;:::o;8150:788::-;-1:-1:-1;;;;;6478:10:16;6457:32;;8260:17;6457:32;;;:20;:32;;;;;;8260:17;;;;6457:32;:46;;6449:55;;;;;;5807:4;-1:-1:-1;;;;;5785:27:16;:10;-1:-1:-1;;;;;5785:27:16;;;5777:36;;;;;;;;-1:-1:-1;;;;;;;8333:10:16;8312:32;;;;;;:20;:32;;;;;;;;;8369:22;:34;;;;;;;8413:38;;;;8312:32;;8513:36;;;:26;:36;;;;;;;8500:64;;8369:34;8500:12;:64::i;:::-;-1:-1:-1;;;;;8461:36:16;;;;;;:26;:36;;;;;:103;8607:17;;8594:45;;8626:12;8594;:45::i;:::-;8574:17;:65;-1:-1:-1;;;;;8677:10:16;8656:32;;;;;;:20;:32;;;;;;;;8649:39;;-1:-1:-1;;8649:39:16;;;8706:11;;:46;;;;;;;;;;;;;;;;;;;;:11;;;:20;;:46;;;;;;;;;;;;;:11;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;8706:46:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8706:46:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8706:46:16;8698:55;;;;;;;;8816:17;;8771:18;;;8800:11;;8771:41;;;-1:-1:-1;;;;;8771:41:16;;-1:-1:-1;;;;;8800:11:16;;;8771:41;;;;;;;;:18;;;:28;;:41;;;;;;;;;;;;;;:18;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;8771:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8771:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8771:41:16;:62;8763:71;;;;;;8893:8;-1:-1:-1;;;;;8849:53:16;8867:10;-1:-1:-1;;;;;8849:53:16;;8879:12;8849:53;;;;;;;;;;;;;;;;;;5823:1;8150:788;;:::o;3550:35::-;;;;:::o;9645:503::-;5633:4;-1:-1:-1;;;;;5611:27:16;:10;-1:-1:-1;;;;;5611:27:16;;5603:36;;;;;;;;9804:29;;9800:89;;;9877:1;9850:28;;9800:89;9898:13;:40;;;9948:23;:42;;;10000:29;:53;;;10122:18;;10068:73;;;;;;;;;;;;-1:-1:-1;;;;;10122:18:16;;;10068:73;;;;;;;;;;;;;;9645:503;;;:::o;3519:25::-;;;;:::o;732:244:14:-;875:33;;;;;;-1:-1:-1;;;;;875:33:14;;;;;;;896:4;875:33;;;;;;;;;;;;;;851:5;;875:14;;;;;:33;;;;;;;;;;;;;;835:7;875:14;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;875:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;875:33:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;875:33:14;867:42;;;;;;;;952:5;-1:-1:-1;;;;;924:45:14;939:4;-1:-1:-1;;;;;924:45:14;;945:5;959:9;924:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;924:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:244;;;;;:::o;4235:30:16:-;;;-1:-1:-1;;;;;4235:30:16;;:::o;4154:41::-;;;;:::o;12822:559::-;12975:11;13002:18;5449:1;5405:18;;;;;;;;;-1:-1:-1;;;;;5405:18:16;-1:-1:-1;;;;;5399:35:16;;5435:10;5399:47;;;;;;;;;;;;;-1:-1:-1;;;;;5399:47:16;-1:-1:-1;;;;;5399:47:16;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5399:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5399:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5399:47:16;:51;5391:60;;;;;;5807:4;-1:-1:-1;;;;;5785:27:16;:10;-1:-1:-1;;;;;5785:27:16;;;5777:36;;;;;;;;13023:9;:25;;13033:14;;13023:25;;;;;;;;;;;;;;-1:-1:-1;;;;;13074:10:16;13066:19;;;:7;13023:25;;;;;13066:7;;;:19;;;;;;;13023:25;;-1:-1:-1;13066:19:16;;:27;;:19;:27;;13058:36;;;;;;13113:7;;;:16;;;;;;;;;:::i;:::-;13104:25;;13157:54;;;;;;;;;13174:16;13157:54;;;;;;13199:10;-1:-1:-1;;;;;13157:54:16;;;;13139:1;:7;;13147:6;13139:15;;;;;;;;;;;;;;;;;;:72;;:15;;:72;;;;;;-1:-1:-1;;13139:72:16;;;;;;;;;;-1:-1:-1;;13139:72:16;;-1:-1:-1;;;;;13139:72:16;;;;;;;13229:10;13221:19;;;;;;:7;;;:19;;;;;;;:26;;;;;-1:-1:-1;13221:26:16;;;;;;13275:10;;;13257:15;;;:28;13300:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12822:559;;;;;:::o;10748:992::-;6263:29;;6218:18;;;6212:47;;;-1:-1:-1;;;;;6212:47:16;;-1:-1:-1;;;;;6248:10:16;6212:47;;;;;;;;;;;-1:-1:-1;;;;6263:29:16;;6218:18;;6212:35;;:47;;;;;;;;;;;;;;-1:-1:-1;6218:18:16;6212:47;;;5:2:-1;;;;30:1;27;20:12;5:2;6212:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6212:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6212:47:16;:80;;6204:89;;;;;;5807:4;-1:-1:-1;;;;;5785:27:16;:10;-1:-1:-1;;;;;5785:27:16;;;5777:36;;;;;;;;11103:11;;-1:-1:-1;;;;;11080:35:16;;;11103:11;;11080:35;;11072:44;;;;;;11139:9;:18;;;;;;;;;:::i;:::-;11126:31;;11188:9;11198:10;11188:21;;;;;;;;;;;;;;;;;;;;;;;;;11219:25;;-1:-1:-1;;11219:25:16;-1:-1:-1;;;;;11219:25:16;;;;;-1:-1:-1;11254:8:16;;:20;;;11284:32;;11188:21;;-1:-1:-1;11284:32:16;;:14;;;;:32;;;;;:::i;:::-;;11353:11;11366:9;11377:19;11343:54;;;;-1:-1:-1;;;;;11343:54:16;-1:-1:-1;;;;;11343:54:16;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;11343:54:16;;;;;;;;;;;;11326:14;;;:71;11423:3;11407:13;;;:19;;;274:1:-1;11461:23:16;11487:9;11461:35;11455:41;-1:-1:-1;11436:16:16;;:60;11506:11;;;:19;;-1:-1:-1;;11535:24:16;;;-1:-1:-1;11569:15:16;;;:19;;;11603:66;;;-1:-1:-1;;;;;11603:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11603:66:16;;-1:-1:-1;11603:66:16;;-1:-1:-1;11603:66:16;;-1:-1:-1;11603:66:16;;11343:54;;-1:-1:-1;11603:66:16;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11603:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11705:1;11694:12;;11679;:27;10748:992;;;;;;;:::o;12030:371::-;12225:18;12259;12280:9;12290:14;12280:25;;;;;;;;;;;;;;;;;;;;12259:46;;12350:11;12363:9;12374:19;12340:54;;;;-1:-1:-1;;;;;12340:54:16;-1:-1:-1;;;;;12340:54:16;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;-1:-1;;263:2;259:12;;;;254:3;250:22;246:30;;;;340:21;;;311:9;;295:26;377:20;;;;365:33;;12340:54:16;;;;;;;;;;12322:14;;;;:72;;-1:-1:-1;;;;;;12030:371:16;;;;;;;:::o;4061:29::-;;;;:::o;1214:123:30:-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o;1042:110::-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:30;;;1042:110::o;244:598:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;244:598:1;;;-1:-1:-1;244:598:1;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;244:598:1;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;244:598:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;244:598:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "REQUIRED_SHARES_TO_BE_BOARD_MEMBER()": "06fde169",
    "TOKEN_DECIMALS()": "5b7f415c",
    "changeVotingRules(uint256,uint256,uint256)": "6e676b69",
    "checkProposalCode(uint256,address,uint256,bytes)": "eceb2945",
    "clearDelegateAndUnlockTokens()": "645bd436",
    "countVotes(uint256)": "1840f0ca",
    "debatingPeriodInMinutes()": "69bd3436",
    "delegatedAmountsByDelegate(address)": "3fb3ec28",
    "delegatesByDelegator(address)": "064cc7a7",
    "executeProposal(uint256,bytes)": "237e9492",
    "hasVoted(uint256,address)": "43859632",
    "lockedDelegatingTokens(address)": "13f47f24",
    "minimumQuorum()": "8160f0b5",
    "name()": "06fdde03",
    "newProposal(address,uint256,bytes,bytes)": "dbc45228",
    "numProposals()": "400e3949",
    "proposals(uint256)": "013cf08b",
    "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
    "requiredSharesToBeBoardMember()": "b94fa03f",
    "setDelegateAndLockTokens(uint256,address)": "5fa7df6b",
    "sharesTokenAddress()": "27ebcf0e",
    "tokenLocker()": "a80bf3e6",
    "totalLockedTokens()": "f5c476f9",
    "vote(uint256,bool)": "c9d27afe"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"metadataHash\",\"type\":\"bytes\"},{\"name\":\"timeCreated\",\"type\":\"uint256\"},{\"name\":\"votingDeadline\",\"type\":\"uint256\"},{\"name\":\"finalized\",\"type\":\"bool\"},{\"name\":\"proposalPassed\",\"type\":\"bool\"},{\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatesByDelegator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REQUIRED_SHARES_TO_BE_BOARD_MEMBER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedDelegatingTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"}],\"name\":\"countVotes\",\"outputs\":[{\"name\":\"yea\",\"type\":\"uint256\"},{\"name\":\"nay\",\"type\":\"uint256\"},{\"name\":\"quorum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sharesTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedAmountsByDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensToLock\",\"type\":\"uint256\"},{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"setDelegateAndLockTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearDelegateAndUnlockTokens\",\"outputs\":[{\"name\":\"lockedTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debatingPeriodInMinutes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumSharesToPassAVote\",\"type\":\"uint256\"},{\"name\":\"minutesForDebate\",\"type\":\"uint256\"},{\"name\":\"sharesToBeBoardMember\",\"type\":\"uint256\"}],\"name\":\"changeVotingRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLocker\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredSharesToBeBoardMember\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"voteID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"name\":\"jobMetadataHash\",\"type\":\"bytes\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"newProposal\",\"outputs\":[{\"name\":\"proposalID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"checkProposalCode\",\"outputs\":[{\"name\":\"codeChecksOut\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLockedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sharesAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"metadataHash\",\"type\":\"bytes\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"position\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"yea\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nay\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ProposalTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newMinimumQuorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newDebatingPeriodInMinutes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newSharesTokenAddress\",\"type\":\"address\"}],\"name\":\"ChangeOfRules\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"TokensDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"TokensUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Project Wyvern Developers\",\"methods\":{\"changeVotingRules(uint256,uint256,uint256)\":{\"params\":{\"minimumSharesToPassAVote\":\"proposal can vote only if the sum of shares held by all voters exceed this number\",\"minutesForDebate\":\"the minimum amount of delay between when a proposal is made and when it can be executed\",\"sharesToBeBoardMember\":\"the minimum number of shares required to create proposals\"}},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"params\":{\"beneficiary\":\"who to send the ether to\",\"proposalNumber\":\"ID number of the proposal to query\",\"transactionBytecode\":\"bytecode of transaction\",\"weiAmount\":\"amount of ether to send\"}},\"clearDelegateAndUnlockTokens()\":{\"details\":\"Can only be called by a sending address currently delegating tokens, will transfer all locked tokens back to the sender\",\"return\":\"The number of tokens previously locked, now released\"},\"countVotes(uint256)\":{\"params\":{\"proposalNumber\":\"proposal number\"},\"return\":\"yea votes, nay votes, quorum (total votes)\"},\"executeProposal(uint256,bytes)\":{\"params\":{\"proposalNumber\":\"proposal number\",\"transactionBytecode\":\"optional: if the transaction contained a bytecode, you need to send it\"}},\"hasVoted(uint256,address)\":{\"params\":{\"proposalNumber\":\"proposal number\",\"shareholder\":\"address to query\"},\"return\":\"whether or not the specified address has cast a vote on the specified proposal\"},\"newProposal(address,uint256,bytes,bytes)\":{\"details\":\"Submit proposal for the DAO to execute a particular transaction. Submitter should check that the `beneficiary` account exists, unless the intent is to burn Ether.\",\"params\":{\"beneficiary\":\"who to send the ether to\",\"jobMetadataHash\":\"Hash of job metadata (IPFS)\",\"transactionBytecode\":\"bytecode of transaction\",\"weiAmount\":\"amount of ether to send, in wei\"}},\"receiveApproval(address,uint256,address,bytes)\":{\"details\":\"Receive tokens and generate a log event\",\"params\":{\"extraData\":\"Additional data to log\",\"from\":\"Address from which to transfer tokens\",\"token\":\"Address of token\",\"value\":\"Amount of tokens to transfer\"}},\"setDelegateAndLockTokens(uint256,address)\":{\"details\":\"An address holding tokens (shares) may only delegate some portion of their vote to one delegate at any one time\",\"params\":{\"delegate\":\"the address to which votes equal to the number of tokens locked will be delegated\",\"tokensToLock\":\"number of tokens to be locked (sending address must have at least this many tokens)\"}},\"vote(uint256,bool)\":{\"details\":\"Vote in favor or against an existing proposal. Voter should check that the proposal destination account exists, unless the intent is to burn Ether.\",\"params\":{\"proposalNumber\":\"number of proposal\",\"supportsProposal\":\"either in favor or against it\"}}},\"title\":\"TestDAO\"},\"userdoc\":{\"methods\":{\"changeVotingRules(uint256,uint256,uint256)\":{\"notice\":\"Change voting rules     * Make so that proposals need tobe discussed for at least `minutesForDebate/60` hours and all voters combined must own more than `minimumSharesToPassAVote` shares of token `sharesAddress` to be executed and a shareholder needs `sharesToBeBoardMember` shares to create a transaction proposal\"},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"notice\":\"Check if a proposal code matches\"},\"clearDelegateAndUnlockTokens()\":{\"notice\":\"Undelegate all delegated tokens Clear the delegate address for all tokens delegated by the sending address, unlocking the locked tokens.\"},\"countVotes(uint256)\":{\"notice\":\"Count the votes, including delegated votes, in support of, against, and in total for a particular proposal\"},\"executeProposal(uint256,bytes)\":{\"notice\":\"Finish vote     * Count the votes proposal #`proposalNumber` and execute it if approved\"},\"hasVoted(uint256,address)\":{\"notice\":\"Return whether a particular shareholder has voted on a particular proposal (convenience function)\"},\"newProposal(address,uint256,bytes,bytes)\":{\"notice\":\"Add Proposal     * Propose to send `weiAmount / 1e18` ether to `beneficiary` for `jobMetadataHash`. `transactionBytecode ? Contains : Does not contain` code.\"},\"setDelegateAndLockTokens(uint256,address)\":{\"notice\":\"Delegate an amount of tokens Set the delegate address for a specified number of tokens belonging to the sending address, locking the tokens.\"},\"vote(uint256,bool)\":{\"notice\":\"Log a vote for a proposal     * Vote `supportsProposal? in support of : against` proposal #`proposalNumber`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/TestDAO.sol\":\"TestDAO\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/TestDAO.sol\":{\"keccak256\":\"0xed2f7419440a44a89f36e58f5eff70a0cfd865f71f278d464ff4252426e4801f\",\"urls\":[\"bzzr://8e42eea91400b57f51985e795e70ae89b5b38306518c6e33a8391f1b4cc2d099\"]},\"contracts/common/TokenLocker.sol\":{\"keccak256\":\"0x4fef2ffa511a2daeb0fbec6ddc58bc7791fed95e79640011a7f5e17293554a31\",\"urls\":[\"bzzr://fd57438896860b1633bab336a89623329b4bd2ca12fcc4fdbfea54f869f399f6\"]},\"contracts/common/TokenRecipient.sol\":{\"keccak256\":\"0x7936f97ad177b1420a554e1ecacc76517f2ab7218005cbcdd07fc218b99a5f60\",\"urls\":[\"bzzr://3bc1756ecd26e36c32c6d26e0779fecccfd0e5caaf530eff51eab6163f3b4934\"]},\"contracts/dao/DelegatedShareholderAssociation.sol\":{\"keccak256\":\"0x4dfa77f349d9168c80cab71b1055f584cdcfced77660c67c381593a5212b2a9a\",\"urls\":[\"bzzr://4143a3ae6442c2e0d95e20bb1670c41b5152cdf485d89eb7efdf9a289ff43782\"]},\"lib/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1\",\"urls\":[\"bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd48f887d15d0411901fc331e74a25d7afa63d89a1257e8e3f43ce1b1e8f4a1e3\",\"urls\":[\"bzzr://09c28b5e4b9323a3675abe0d2f53d78ee30b96f20add8b9432f870df3c8e1970\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0xa36ddb4cd5f04f0f5b7f344819267dd5500467d58949dd012a85876233c9314e\",\"urls\":[\"bzzr://02ed45f8a66dde083a6fae1b27a4f37605c81e3b8a26b7b16dab9537f901535c\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.23+commit.124ca40d"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": null,
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "metadataHash",
              "type": "bytes"
            },
            {
              "internalType": null,
              "name": "timeCreated",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "votingDeadline",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "finalized",
              "type": "bool"
            },
            {
              "internalType": null,
              "name": "proposalPassed",
              "type": "bool"
            },
            {
              "internalType": null,
              "name": "numberOfVotes",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "proposalHash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatesByDelegator",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lockedDelegatingTokens",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "countVotes",
          "outputs": [
            {
              "internalType": null,
              "name": "yea",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "nay",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "quorum",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalNumber",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "transactionBytecode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeProposal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesTokenAddress",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedAmountsByDelegate",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numProposals",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalNumber",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "shareholder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasVoted",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOKEN_DECIMALS",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "tokensToLock",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "delegate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDelegateAndLockTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDelegateAndUnlockTokens",
          "outputs": [
            {
              "internalType": null,
              "name": "lockedTokens",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "debatingPeriodInMinutes",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "minimumSharesToPassAVote",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "minutesForDebate",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "sharesToBeBoardMember",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeVotingRules"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumQuorum",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "token",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveApproval"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenLocker",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requiredSharesToBeBoardMember",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalNumber",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "supportsProposal",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "vote",
          "outputs": [
            {
              "internalType": null,
              "name": "voteID",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "weiAmount",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "jobMetadataHash",
              "type": "bytes"
            },
            {
              "internalType": null,
              "name": "transactionBytecode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "newProposal",
          "outputs": [
            {
              "internalType": null,
              "name": "proposalID",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalNumber",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "weiAmount",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "transactionBytecode",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProposalCode",
          "outputs": [
            {
              "internalType": null,
              "name": "codeChecksOut",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalLockedTokens",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "sharesAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalID",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "metadataHash",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalID",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "position",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "voter",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Voted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proposalID",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "yea",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "nay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "quorum",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "active",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalTallied",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "newMinimumQuorum",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "newDebatingPeriodInMinutes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "newSharesTokenAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangeOfRules",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "delegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "delegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TokensUndelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceivedEther",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceivedTokens",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "changeVotingRules(uint256,uint256,uint256)": {
            "params": {
              "minimumSharesToPassAVote": "proposal can vote only if the sum of shares held by all voters exceed this number",
              "minutesForDebate": "the minimum amount of delay between when a proposal is made and when it can be executed",
              "sharesToBeBoardMember": "the minimum number of shares required to create proposals"
            }
          },
          "checkProposalCode(uint256,address,uint256,bytes)": {
            "params": {
              "beneficiary": "who to send the ether to",
              "proposalNumber": "ID number of the proposal to query",
              "transactionBytecode": "bytecode of transaction",
              "weiAmount": "amount of ether to send"
            }
          },
          "clearDelegateAndUnlockTokens()": {
            "details": "Can only be called by a sending address currently delegating tokens, will transfer all locked tokens back to the sender",
            "return": "The number of tokens previously locked, now released"
          },
          "countVotes(uint256)": {
            "params": {
              "proposalNumber": "proposal number"
            },
            "return": "yea votes, nay votes, quorum (total votes)"
          },
          "executeProposal(uint256,bytes)": {
            "params": {
              "proposalNumber": "proposal number",
              "transactionBytecode": "optional: if the transaction contained a bytecode, you need to send it"
            }
          },
          "hasVoted(uint256,address)": {
            "params": {
              "proposalNumber": "proposal number",
              "shareholder": "address to query"
            },
            "return": "whether or not the specified address has cast a vote on the specified proposal"
          },
          "newProposal(address,uint256,bytes,bytes)": {
            "details": "Submit proposal for the DAO to execute a particular transaction. Submitter should check that the `beneficiary` account exists, unless the intent is to burn Ether.",
            "params": {
              "beneficiary": "who to send the ether to",
              "jobMetadataHash": "Hash of job metadata (IPFS)",
              "transactionBytecode": "bytecode of transaction",
              "weiAmount": "amount of ether to send, in wei"
            }
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "details": "Receive tokens and generate a log event",
            "params": {
              "extraData": "Additional data to log",
              "from": "Address from which to transfer tokens",
              "token": "Address of token",
              "value": "Amount of tokens to transfer"
            }
          },
          "setDelegateAndLockTokens(uint256,address)": {
            "details": "An address holding tokens (shares) may only delegate some portion of their vote to one delegate at any one time",
            "params": {
              "delegate": "the address to which votes equal to the number of tokens locked will be delegated",
              "tokensToLock": "number of tokens to be locked (sending address must have at least this many tokens)"
            }
          },
          "vote(uint256,bool)": {
            "details": "Vote in favor or against an existing proposal. Voter should check that the proposal destination account exists, unless the intent is to burn Ether.",
            "params": {
              "proposalNumber": "number of proposal",
              "supportsProposal": "either in favor or against it"
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "changeVotingRules(uint256,uint256,uint256)": {
            "notice": "Change voting rules     * Make so that proposals need tobe discussed for at least `minutesForDebate/60` hours and all voters combined must own more than `minimumSharesToPassAVote` shares of token `sharesAddress` to be executed and a shareholder needs `sharesToBeBoardMember` shares to create a transaction proposal"
          },
          "checkProposalCode(uint256,address,uint256,bytes)": {
            "notice": "Check if a proposal code matches"
          },
          "clearDelegateAndUnlockTokens()": {
            "notice": "Undelegate all delegated tokens Clear the delegate address for all tokens delegated by the sending address, unlocking the locked tokens."
          },
          "countVotes(uint256)": {
            "notice": "Count the votes, including delegated votes, in support of, against, and in total for a particular proposal"
          },
          "executeProposal(uint256,bytes)": {
            "notice": "Finish vote     * Count the votes proposal #`proposalNumber` and execute it if approved"
          },
          "hasVoted(uint256,address)": {
            "notice": "Return whether a particular shareholder has voted on a particular proposal (convenience function)"
          },
          "newProposal(address,uint256,bytes,bytes)": {
            "notice": "Add Proposal     * Propose to send `weiAmount / 1e18` ether to `beneficiary` for `jobMetadataHash`. `transactionBytecode ? Contains : Does not contain` code."
          },
          "setDelegateAndLockTokens(uint256,address)": {
            "notice": "Delegate an amount of tokens Set the delegate address for a specified number of tokens belonging to the sending address, locking the tokens."
          },
          "vote(uint256,bool)": {
            "notice": "Log a vote for a proposal     * Vote `supportsProposal? in support of : against` proposal #`proposalNumber`"
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/TestDAO.sol": "TestDAO"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/TestDAO.sol": {
        "keccak256": "0xed2f7419440a44a89f36e58f5eff70a0cfd865f71f278d464ff4252426e4801f",
        "urls": [
          "bzzr://8e42eea91400b57f51985e795e70ae89b5b38306518c6e33a8391f1b4cc2d099"
        ],
        "license": null
      },
      "contracts/common/TokenLocker.sol": {
        "keccak256": "0x4fef2ffa511a2daeb0fbec6ddc58bc7791fed95e79640011a7f5e17293554a31",
        "urls": [
          "bzzr://fd57438896860b1633bab336a89623329b4bd2ca12fcc4fdbfea54f869f399f6"
        ],
        "license": null
      },
      "contracts/common/TokenRecipient.sol": {
        "keccak256": "0x7936f97ad177b1420a554e1ecacc76517f2ab7218005cbcdd07fc218b99a5f60",
        "urls": [
          "bzzr://3bc1756ecd26e36c32c6d26e0779fecccfd0e5caaf530eff51eab6163f3b4934"
        ],
        "license": null
      },
      "contracts/dao/DelegatedShareholderAssociation.sol": {
        "keccak256": "0x4dfa77f349d9168c80cab71b1055f584cdcfced77660c67c381593a5212b2a9a",
        "urls": [
          "bzzr://4143a3ae6442c2e0d95e20bb1670c41b5152cdf485d89eb7efdf9a289ff43782"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/math/SafeMath.sol": {
        "keccak256": "0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1",
        "urls": [
          "bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd48f887d15d0411901fc331e74a25d7afa63d89a1257e8e3f43ce1b1e8f4a1e3",
        "urls": [
          "bzzr://09c28b5e4b9323a3675abe0d2f53d78ee30b96f20add8b9432f870df3c8e1970"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0xa36ddb4cd5f04f0f5b7f344819267dd5500467d58949dd012a85876233c9314e",
        "urls": [
          "bzzr://02ed45f8a66dde083a6fae1b27a4f37605c81e3b8a26b7b16dab9537f901535c"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/TestDAO.sol",
    "id": 112,
    "exportedSymbols": {
      "TestDAO": [
        111
      ]
    },
    "nodeType": "SourceUnit",
    "src": "103:740:1",
    "nodes": [
      {
        "id": 59,
        "nodeType": "PragmaDirective",
        "src": "103:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 60,
        "nodeType": "ImportDirective",
        "src": "128:51:1",
        "nodes": [],
        "absolutePath": "contracts/dao/DelegatedShareholderAssociation.sol",
        "file": "./dao/DelegatedShareholderAssociation.sol",
        "scope": 112,
        "sourceUnit": 1786,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 111,
        "nodeType": "ContractDefinition",
        "src": "244:598:1",
        "nodes": [
          {
            "id": 65,
            "nodeType": "VariableDeclaration",
            "src": "303:40:1",
            "nodes": [],
            "constant": true,
            "name": "name",
            "scope": 111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 63,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "303:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "546573742044414f",
              "id": 64,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "333:10:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_3f65042be4998d0de124f6d486cead7c7a2d04eaf9ceeaf26f275cb2c03d42bf",
                "typeString": "literal_string \"Test DAO\""
              },
              "value": "Test DAO"
            },
            "visibility": "public"
          },
          {
            "id": 68,
            "nodeType": "VariableDeclaration",
            "src": "350:60:1",
            "nodes": [],
            "constant": true,
            "name": "TOKEN_DECIMALS",
            "scope": 111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "350:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "408:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "id": 76,
            "nodeType": "VariableDeclaration",
            "src": "416:75:1",
            "nodes": [],
            "constant": true,
            "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
            "scope": 111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "416:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000000"
              },
              "id": 75,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "32303030",
                "id": 70,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "474:4:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2000_by_1",
                  "typeString": "int_const 2000"
                },
                "value": "2000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "482:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "488:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "482:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  }
                ],
                "id": 74,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "481:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "474:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "id": 110,
            "nodeType": "FunctionDefinition",
            "src": "525:314:1",
            "nodes": [],
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "566:273:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "sharesTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "576:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6717",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "sharesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "597:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6717",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "576:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6717",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "576:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "requiredSharesToBeBoardMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "620:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "652:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "620:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "620:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "minimumQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "696:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31303030",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:4:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "720:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 92,
                              "name": "TOKEN_DECIMALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "726:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "720:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 94,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "719:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "712:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "696:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "696:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "debatingPeriodInMinutes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "751:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "777:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "751:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "751:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "tokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "788:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$828",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "sharesAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "818:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$6717",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$6717",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "802:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$6717_$returns$_t_contract$_TokenLocker_$828_$",
                          "typeString": "function (contract ERC20) returns (contract TokenLocker)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 103,
                          "name": "TokenLocker",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 828,
                          "src": "806:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenLocker_$828",
                            "typeString": "contract TokenLocker"
                          }
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "802:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$828",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "src": "788:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenLocker_$828",
                      "typeString": "contract TokenLocker"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "788:44:1"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "sharesAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "538:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$6717",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 77,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6717,
                    "src": "538:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6717",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:21:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:1"
            },
            "scope": 111,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "DelegatedShareholderAssociation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1785,
              "src": "264:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelegatedShareholderAssociation_$1785",
                "typeString": "contract DelegatedShareholderAssociation"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "264:31:1"
          }
        ],
        "contractDependencies": [
          828,
          893,
          1785
        ],
        "contractKind": "contract",
        "documentation": "@title TestDAO\n@author Project Wyvern Developers",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          111,
          1785,
          893
        ],
        "name": "TestDAO",
        "scope": 112
      }
    ]
  },
  "id": 1
}