{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maximumRedeemable",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multiplier",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "pubKey",
          "type": "bytes"
        }
      ],
      "name": "pubKeyToEthereumAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_AMOUNT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "txid",
          "type": "bytes32"
        },
        {
          "name": "outputIndex",
          "type": "uint8"
        },
        {
          "name": "satoshis",
          "type": "uint256"
        },
        {
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "name": "isCompressed",
          "type": "bool"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "redeemUTXO",
      "outputs": [
        {
          "name": "tokensRedeemed",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "merkleLeafHash",
          "type": "bytes32"
        },
        {
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "canRedeemUTXOHash",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "releaseTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        },
        {
          "name": "expected",
          "type": "address"
        }
      ],
      "name": "validateSignature",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "name": "merkleLeafHash",
          "type": "bytes32"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "txid",
          "type": "bytes32"
        },
        {
          "name": "originalAddress",
          "type": "bytes20"
        },
        {
          "name": "outputIndex",
          "type": "uint8"
        },
        {
          "name": "satoshis",
          "type": "uint256"
        },
        {
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "canRedeemUTXO",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "ecdsaVerify",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "name": "isCompressed",
          "type": "bool"
        }
      ],
      "name": "pubKeyToBitcoinAddress",
      "outputs": [
        {
          "name": "",
          "type": "bytes20"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rootUTXOMerkleTreeHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalRedeemed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SATS_TO_TOKENS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "name": "totalUtxoAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "txid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "outputIndex",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "satoshis",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "v",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "r",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "s",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "UTXORedeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "TokensReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "288:1375:9:-;;;797:28:27;;;-1:-1:-1;;;;;;797:28:27;;;820:5;1797:29:28;;1116:544:9;5:2:-1;;;;30:1;27;20:12;5:2;1116:544:9;;;;;;;;;;;;;;;;;;;1364:14;:27;;-1:-1:-1;;;;;;1364:27:9;1381:10;-1:-1:-1;;;;;1364:27:9;;;;717:41;1276:32;;;891:39;1425:24;;;1401:21;:48;1505:22;:35;;;;-1:-1:-1;1550:26:9;;;;1586:17;:30;;;;1626:10;:27;288:1375;;;-1:-1:-1;288:1375:9;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101695763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663059f8b16811461016e57806306fdde031461019557806308b4312b1461021f578063095ea7b31461023457806318160ddd1461026c5780631b3ed7221461028157806323b872dd14610296578063313ce567146102c057806342966c68146102d55780635418796c146102ef5780635427789c14610364578063661884631461037957806370a082311461039d578063782520dd146103be5780637f7614721461047a57806387b0be48146104d457806395d89b41146104f5578063a9059cbb1461050a578063af1d06e81461052e578063b80ac7df1461055e578063ca193e4d146105b5578063ce267b551461062e578063d73dd623146106a4578063dd62ed3e146106c8578063e073ef69146106ef578063e6997f6d1461076e578063f35dad4014610783578063fa2dedec14610798575b600080fd5b34801561017a57600080fd5b506101836107ad565b60408051918252519081900360200190f35b3480156101a157600080fd5b506101aa6107b2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e45781810151838201526020016101cc565b50505050905090810190601f1680156102115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022b57600080fd5b506101836107e9565b34801561024057600080fd5b50610258600160a060020a03600435166024356107ef565b604080519115158252519081900360200190f35b34801561027857600080fd5b5061018361085a565b34801561028d57600080fd5b50610183610860565b3480156102a257600080fd5b50610258600160a060020a0360043581169060243516604435610866565b3480156102cc57600080fd5b506101836109d4565b3480156102e157600080fd5b506102ed6004356109d9565b005b3480156102fb57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526103489436949293602493928401919081908401838280828437509497506109e69650505050505050565b60408051600160a060020a039092168252519081900360200190f35b34801561037057600080fd5b50610183610a53565b34801561038557600080fd5b50610258600160a060020a0360043516602435610a62565b3480156103a957600080fd5b50610183600160a060020a0360043516610b5b565b3480156103ca57600080fd5b506040805160206004606435818101358381028086018501909652808552610183958335956024803560ff16966044359636969095608495939091019290918291908501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050508235151593505060ff602083013516916040810135915060600135610b76565b34801561048657600080fd5b5060408051602060046024803582810135848102808701860190975280865261025896843596369660449591949091019291829185019084908082843750949750610df39650505050505050565b3480156104e057600080fd5b506102ed600160a060020a0360043516610e1e565b34801561050157600080fd5b506101aa610f22565b34801561051657600080fd5b50610258600160a060020a0360043516602435610f59565b34801561053a57600080fd5b5061025860043560ff60243516604435606435600160a060020a0360843516611040565b34801561056a57600080fd5b50604080516020600480358082013583810280860185019096528085526102589536959394602494938501929182918501908490808284375094975050933594506110c59350505050565b3480156105c157600080fd5b50604080516020600460843581810135838102808601850190965280855261025895833595602480356bffffffffffffffffffffffff19169660443560ff1696606435963696919560a4959490910192829190850190849080828437509497506110d49650505050505050565b34801561063a57600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610258958335600160a060020a03169536956044949193909101919081908401838280828437509497505050833560ff1694505050602082013591604001359050611129565b3480156106b057600080fd5b50610258600160a060020a03600435166024356111b0565b3480156106d457600080fd5b50610183600160a060020a0360043581169060243516611252565b3480156106fb57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261074c94369492936024939284019190819084018382808284375094975050505091351515925061127d915050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b34801561077a57600080fd5b506101836113cf565b34801561078f57600080fd5b506101836113d5565b3480156107a457600080fd5b506101836113db565b600181565b60408051808201909152601481527f50726f6a6563742057797665726e20546f6b656e000000000000000000000000602082015281565b60095481565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60015490565b60075481565b6000600160a060020a038316151561087d57600080fd5b600160a060020a0384166000908152602081905260409020548211156108a257600080fd5b600160a060020a03808516600090815260026020908152604080832033909416835292905220548211156108d557600080fd5b600160a060020a0384166000908152602081905260409020546108fe908363ffffffff6113e416565b600160a060020a038086166000908152602081905260408082209390935590851681522054610933908363ffffffff6113f616565b600160a060020a0380851660009081526020818152604080832094909455878316825260028152838220339093168252919091522054610979908363ffffffff6113e416565b600160a060020a0380861660008181526002602090815260408083203386168452825291829020949094558051868152905192871693919260008051602061160e833981519152929181900390910190a35060019392505050565b601281565b6109e33382611403565b50565b6000816040518082805190602001908083835b60208310610a185780518252601f1990920191602091820191016109f9565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120600160a060020a031695945050505050565b6a01a784379d99db4200000081565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610abf57600160a060020a033381166000908152600260209081526040808320938816835292905290812055610af6565b610acf818463ffffffff6113e416565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6000806000610b85888861127d565b604080518e81526bffffffffffffffffffffffff198316602082015260f860020a60ff8f16026034820152603581018d905290519081900360550190209092509050610bd1818a610df3565b1515610bdc57600080fd5b610be93389888888611129565b1515610bf457600080fd5b6000818152600660205260409020805460ff19166001179055600754610c1b908b906114f2565b9250610c29600854846113f6565b60088190556009541015610c3c57600080fd5b600160a060020a033316600090815260208190526040902054610c5f90846113f6565b600160a060020a03331660008181526020818152604080832094909455835187815293519293919260008051602061160e8339815191529281900390910190a333600160a060020a03167f312ab01e6ce21dfe30ce841b1cd250767ce180d2c10a5bea492a1cb6b62eb97b8d8d8d8d8d8c8c8c8c604051808a600019166000191681526020018960ff1660ff16815260200188815260200180602001806020018760ff1660ff16815260200186600019166000191681526020018560001916600019168152602001848152602001838103835289818151815260200191508051906020019060200280838360005b83811015610d65578181015183820152602001610d4d565b50505050905001838103825288818151815260200191508051906020019080838360005b83811015610da1578181015183820152602001610d89565b50505050905090810190601f168015610dce5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a250509998505050505050505050565b60008281526006602052604081205460ff16158015610e175750610e1782846110c5565b9392505050565b60035433600160a060020a039081169116148015610e57575060035474010000000000000000000000000000000000000000900460ff16155b1515610e6257600080fd5b6003805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055600454600160a060020a0382166000818152602081815260408083208590558051948552519293919260008051602061160e8339815191529281900390910190a360045460408051600160a060020a0384168152602081019290925280517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df931799281900390910190a150565b60408051808201909152600381527f5759560000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a0383161515610f7057600080fd5b600160a060020a033316600090815260208190526040902054821115610f9557600080fd5b600160a060020a033316600090815260208190526040902054610fbe908363ffffffff6113e416565b600160a060020a033381166000908152602081905260408082209390935590851681522054610ff3908363ffffffff6113f616565b600160a060020a038085166000818152602081815260409182902094909455805186815290519193339093169260008051602061160e83398151915292918290030190a350600192915050565b604080516000808252602080830180855289905260ff881683850152606083018790526080830186905292519092600160a060020a0385169260019260a08083019392601f19830192908190039091019087865af11580156110a6573d6000803e3d6000fd5b50505060206040510351600160a060020a031614905095945050505050565b6000610e17836005548461151b565b604080518681526bffffffffffffffffffffffff198616602082015260f860020a60ff861602603482015260358101849052905190819003605501902060009061111e8184610df3565b979650505050505050565b60006111a66002876040518082600160a060020a0316600160a060020a03166c010000000000000000000000000281526014019150506020604051808303816000865af115801561117e573d6000803e3d6000fd5b5050506040513d602081101561119357600080fd5b50518585856111a18a6109e6565b611040565b9695505050505050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546111e8908363ffffffff6113f616565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008060008061128e86600061159d565b925061129b86602061159d565b9150841561135e5760028206156112b35760036112b6565b60025b9050600360028285604051808360ff1660ff1660f860020a028152600101828152602001925050506020604051808303816000865af11580156112fd573d6000803e3d6000fd5b5050506040513d602081101561131257600080fd5b505160408051918252516020828101929091908190038201816000865af1158015611341573d6000803e3d6000fd5b505050604051516c010000000000000000000000000293506113c6565b50604080517f040000000000000000000000000000000000000000000000000000000000000081526001810184905260218101839052905160049160039160029160418082019260209290919082900301816000865af11580156112fd573d6000803e3d6000fd5b50505092915050565b60055481565b60085481565b6402540be40081565b6000828211156113f057fe5b50900390565b8181018281101561085457fe5b600160a060020a03821660009081526020819052604090205481111561142857600080fd5b600160a060020a038216600090815260208190526040902054611451908263ffffffff6113e416565b600160a060020a03831660009081526020819052604090205560015461147d908263ffffffff6113e416565b600155604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a0385169160008051602061160e8339815191529181900360200190a35050565b600082151561150357506000610854565b5081810281838281151561151357fe5b041461085457fe5b60008181805b865182101561159057868281518110151561153857fe5b6020908102909101015190508083101561156a5760408051938452602084018290528051938490030190922091611585565b60408051828152602081019490945280519384900301909220915b600190910190611521565b5050929092149392505050565b6000805b60208110156116065780600802848483018151811015156115be57fe5b60209101015160029190910a60f860020a918290049091027fff00000000000000000000000000000000000000000000000000000000000000160491909118906001016115a1565b50929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582016b7d5c01a70f1b270a09a2bed24117e3d76e3b7f1fbc0dd37744edf703806710029",
    "sourceMap": "288:1375:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;570:41:9;;;;;;;;;;;;;;;;;;;;419:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;419:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:29:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1912:29:28;;;;1829:188:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1829:188:36;-1:-1:-1;;;;;1829:188:36;;;;;;;;;;;;;;;;;;;;;;;;;371:83:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:32;;;;1728:22:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1728:22:28;;;;736:470:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;736:470:36;-1:-1:-1;;;;;736:470:36;;;;;;;;;;;;375:38:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:38:9;;;;353:73:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:33;;;;;;;4278:182:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4278:182:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4278:182:28;;-1:-1:-1;4278:182:28;;-1:-1:-1;;;;;;;4278:182:28;;;;;-1:-1:-1;;;;;4278:182:28;;;;;;;;;;;;;;851:79:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:79:9;;;;3701:425:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3701:425:36;-1:-1:-1;;;;;3701:425:36;;;;;;;1131:99:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1131:99:32;-1:-1:-1;;;;;1131:99:32;;;;;8216:1649:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8216:1649:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8216:1649:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8216:1649:28;;;;-1:-1:-1;8216:1649:28;-1:-1:-1;8216:1649:28;;-1:-1:-1;8216:1649:28;;;;;;;;-1:-1:-1;8216:1649:28;;-1:-1:-1;;;;8216:1649:28;;;;;-1:-1:-1;;8216:1649:28;;;;;;;;;;;;-1:-1:-1;8216:1649:28;;;;;7242:297;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7242:297:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7242:297:28;;-1:-1:-1;7242:297:28;;-1:-1:-1;;;;;;;7242:297:28;1232:353:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1232:353:27;-1:-1:-1;;;;;1232:353:27;;;;;483:41:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:41:9;;;;608:321:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;608:321:32;-1:-1:-1;;;;;608:321:32;;;;;;;3184:178:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3184:178:28;;;;;;;;;;;-1:-1:-1;;;;;3184:178:28;;;;;5949:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5949:183:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5949:183:28;;-1:-1:-1;;5949:183:28;;;-1:-1:-1;5949:183:28;;-1:-1:-1;;;;5949:183:28;6532:410;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6532:410:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6532:410:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6532:410:28;;-1:-1:-1;6532:410:28;;-1:-1:-1;;;;;;;6532:410:28;3843:205;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3843:205:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3843:205:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3843:205:28;;-1:-1:-1;;;3843:205:28;;;;;-1:-1:-1;;;3843:205:28;;;;;;;;;-1:-1:-1;3843:205:28;;2946:293:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2946:293:36;-1:-1:-1;;;;;2946:293:36;;;;;;;2336:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2336:153:36;-1:-1:-1;;;;;2336:153:36;;;;;;;;;;4775:918:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4775:918:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4775:918:28;;-1:-1:-1;;;;4775:918:28;;;;;-1:-1:-1;4775:918:28;;-1:-1:-1;;4775:918:28;;;;;-1:-1:-1;;4775:918:28;;;;;;;;;;;;;;1528:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1528:37:28;;;;1797:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1797:29:28;;;;677:81:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;677:81:9;;;;570:41;610:1;570:41;:::o;419:58::-;;;;;;;;;;;;;;;;;;;:::o;1912:29:28:-;;;;:::o;1829:188:36:-;-1:-1:-1;;;;;1916:10:36;1908:19;;1896:4;1908:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;:38;;;1957;;;;;;;1896:4;;1908:29;:19;1957:38;;;;;;;;;;;-1:-1:-1;2008:4:36;1829:188;;;;;:::o;371:83:32:-;437:12;;371:83;:::o;1728:22:28:-;;;;:::o;736:470:36:-;842:4;-1:-1:-1;;;;;864:17:36;;;;856:26;;;;;;-1:-1:-1;;;;;906:15:36;;:8;:15;;;;;;;;;;;896:25;;;888:34;;;;;;-1:-1:-1;;;;;946:14:36;;;;;;;:7;:14;;;;;;;;961:10;946:26;;;;;;;;;;936:36;;;928:45;;;;;;-1:-1:-1;;;;;998:15:36;;:8;:15;;;;;;;;;;;:27;;1018:6;998:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;980:15:36;;;:8;:15;;;;;;;;;;;:45;;;;1047:13;;;;;;;:25;;1065:6;1047:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1031:13:36;;;:8;:13;;;;;;;;;;;:41;;;;1107:14;;;;;:7;:14;;;;;1122:10;1107:26;;;;;;;;;;;:38;;1138:6;1107:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1078:14:36;;;;;;;:7;:14;;;;;;;;1093:10;1078:26;;;;;;;;;;:67;;;;1156:28;;;;;;;;;;;1078:14;;-1:-1:-1;;;;;;;;;;;1156:28:36;;;;;;;;;;-1:-1:-1;1197:4:36;736:470;;;;;:::o;375:38:9:-;411:2;375:38;:::o;353:73:33:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;4278:182:28:-;4347:7;4396:6;4386:17;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;4386:17:28;;;;;;;;;;-1:-1:-1;;;;;4381:71:28;;4278:182;-1:-1:-1;;;;;4278:182:28:o;851:79:9:-;891:39;851:79;:::o;3701:425:36:-;-1:-1:-1;;;;;3842:10:36;3834:19;;3804:4;3834:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;3873:27;;;3869:164;;;-1:-1:-1;;;;;3918:10:36;3910:19;;3942:1;3910:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;:33;3869:164;;;3996:30;:8;4009:16;3996:30;:12;:30;:::i;:::-;-1:-1:-1;;;;;3972:10:36;3964:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;:62;3869:164;-1:-1:-1;;;;;4052:10:36;4043:61;;4074:19;;;;:7;:19;;;;;;;;4043:61;;;4074:29;;;;;;;;;;;4043:61;;;;;;;;;;;;;;;;;-1:-1:-1;4117:4:36;;3701:425;-1:-1:-1;;;3701:425:36:o;1131:99:32:-;-1:-1:-1;;;;;1209:16:32;1187:7;1209:16;;;;;;;;;;;;1131:99::o;8216:1649:28:-;8382:19;8510:23;8642:22;8536:44;8559:6;8567:12;8536:22;:44::i;:::-;8667:55;;;;;;-1:-1:-1;;8667:55:28;;;;;;-1:-1:-1;;;8667:55:28;;;;;;;;;;;;;;;;;;;;;;;;8510:70;;-1:-1:-1;8667:55:28;-1:-1:-1;8793:40:28;8667:55;8827:5;8793:17;:40::i;:::-;8785:49;;;;;;;;8956:40;8968:10;8980:6;8988:1;8991;8994;8956:11;:40::i;:::-;8948:49;;;;;;;;9049:29;;;;:13;:29;;;;;:36;;-1:-1:-1;;9049:36:28;9081:4;9049:36;;;9181:10;;9158:34;;9171:8;;9158:12;:34::i;:::-;9141:51;;9262:43;9275:13;;9290:14;9262:12;:43::i;:::-;9246:13;:59;;;9369:17;;-1:-1:-1;9352:34:28;9344:43;;;;;;-1:-1:-1;;;;;9479:10:28;9470:20;:8;:20;;;;;;;;;;;9457:50;;9492:14;9457:12;:50::i;:::-;-1:-1:-1;;;;;9443:10:28;9434:20;:8;:20;;;;;;;;;;;:73;;;;9562:48;;;;;;;9434:20;;:8;;-1:-1:-1;;;;;;;;;;;9562:48:28;;;;;;;;;9738:10;-1:-1:-1;;;;;9672:93:28;;9685:4;9691:11;9704:8;9714:5;9721:6;9729:1;9732;9735;9750:14;9672:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9672:93:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9672:93:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8216:1649;;;;;;;;;;;;;:::o;7242:297::-;7331:4;7454:29;;;:13;:29;;;;;;;;:38;;;7453:78;;;7497:34;7509:5;7516:14;7497:11;:34::i;:::-;7446:86;7242:297;-1:-1:-1;;;7242:297:28:o;1232:353:27:-;1316:14;;1302:10;-1:-1:-1;;;;;1302:28:27;;;1316:14;;1302:28;1301:52;;;;-1:-1:-1;1337:15:27;;;;;;;1336:16;1301:52;1293:61;;;;;;;;1364:15;:22;;-1:-1:-1;;1364:22:27;;;;;1420:21;;-1:-1:-1;;;;;1396:21:27;;1364:22;1396:21;;;;;;;;;;;:45;;;1456:56;;;;;;1396:21;;1364:22;;-1:-1:-1;;;;;;;;;;;1456:56:27;;;;;;;;;1556:21;;1528:50;;;-1:-1:-1;;;;;1528:50:27;;;;;;;;;;;;;;;;;;;;;;;1232:353;:::o;483:41:9:-;;;;;;;;;;;;;;;;;;;:::o;608:321:32:-;671:4;-1:-1:-1;;;;;691:17:32;;;;683:26;;;;;;-1:-1:-1;;;;;742:10:32;733:20;:8;:20;;;;;;;;;;;723:30;;;715:39;;;;;;-1:-1:-1;;;;;793:10:32;784:20;:8;:20;;;;;;;;;;;:32;;809:6;784:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;770:10:32;761:20;;:8;:20;;;;;;;;;;;:55;;;;838:13;;;;;;;:25;;856:6;838:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;822:13:32;;;:8;:13;;;;;;;;;;;;:41;;;;874:33;;;;;;;822:13;;883:10;874:33;;;;-1:-1:-1;;;;;;;;;;;874:33:32;;;;;;;;-1:-1:-1;920:4:32;608:321;;;;:::o;3184:178:28:-;3319:24;;;3296:4;3319:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3296:4;;-1:-1:-1;;;;;3319:36:28;;;:24;;;;;;;;-1:-1:-1;;3319:24:28;;;;;;;;;;;3296:4;3319:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3319:24:28;;;;;;;;-1:-1:-1;;;;;3319:36:28;;3312:43;;3184:178;;;;;;;:::o;5949:183::-;6032:4;6055:70;6079:5;6086:22;;6110:14;6055:23;:70::i;6532:410::-;6786:55;;;;;;-1:-1:-1;;6786:55:28;;;;;;-1:-1:-1;;;6786:55:28;;;;;;;;;;;;;;;;;;;;;;;;6666:4;;6895:40;6786:55;6929:5;6895:17;:40::i;:::-;6888:47;6532:410;-1:-1:-1;;;;;;;6532:410:28:o;3843:205::-;3945:4;3968:73;3986:12;3993:4;3986:12;;;;-1:-1:-1;;;;;3986:12:28;-1:-1:-1;;;;;3986:12:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3986:12:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3986:12:28;4000:1;4003;4006;4009:31;4033:6;4009:23;:31::i;:::-;3968:17;:73::i;:::-;3961:80;3843:205;-1:-1:-1;;;;;;3843:205:28:o;2946:293:36:-;-1:-1:-1;;;;;3106:10:36;3098:19;;3044:4;3098:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;:46;;3132:11;3098:46;:33;:46;:::i;:::-;-1:-1:-1;;;;;3066:10:36;3058:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;:87;;;3156:61;;;;;;;3058:29;;:19;;3156:61;;;;;;;;;;-1:-1:-1;3230:4:36;2946:293;;;;:::o;2336:153::-;-1:-1:-1;;;;;2459:15:36;;;2435:7;2459:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2336:153::o;4775:918:28:-;4861:7;5151:6;5253;5298:18;5165;5173:6;5181:1;5165:7;:18::i;:::-;5160:24;-1:-1:-1;5267:19:28;5275:6;5283:2;5267:7;:19::i;:::-;5262:25;-1:-1:-1;5326:361:28;;;;5434:1;5430;:5;:10;:24;;5450:4;5430:24;;;5443:4;5430:24;5415:39;;5475:34;5485:23;5492:12;5506:1;5485:23;;;;;;;;-1:-1:-1;;;5485:23:28;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5485:23:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5485:23:28;5475:34;;;;;;;5485:23;5475:34;;;;5485:23;;5475:34;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5475:34:28;;;;;;;;5468:41;;;;5326:361;-1:-1:-1;5649:26:28;;;;;;;;;;;;;;;;;;;;5614:4;;5639:37;;5649:26;;;;;;;;;;;;;;;;;-1:-1:-1;5649:26:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5326:361:28;4775:918;;;;;;;:::o;1528:37::-;;;;:::o;1797:29::-;;;;:::o;677:81:9:-;717:41;677:81;:::o;1042:110:30:-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:30;;;1042:110::o;1214:123::-;1293:5;;;1311:6;;;;1304:14;;;430:438:33;-1:-1:-1;;;;;508:14:33;;:8;:14;;;;;;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:33;;:8;:14;;;;;;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:33;;:8;:14;;;;;;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:33;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:33;;;-1:-1:-1;;;;;;;;;;;829:34:33;;;;;;;;430:438;;:::o;203:373:30:-;261:9;487:6;;483:35;;;-1:-1:-1;510:1:30;503:8;;483:35;-1:-1:-1;528:5:30;;;532:1;528;:5;546;;;;;;;;:10;539:18;;;570:699:29;690:4;727:5;690:4;;739:420;763:6;:13;759:1;:17;739:420;;;814:6;821:1;814:9;;;;;;;;;;;;;;;;;;;;-1:-1:-1;836:27:29;;;832:321;;;960:37;;;;;;;;;;;;;;;;;;;;;;;832:321;;;1107:37;;;;;;;;;;;;;;;;;;;;;;;;832:321;778:3;;;;;739:420;;;-1:-1:-1;;1243:21:29;;;;;570:699;-1:-1:-1;;;570:699:29:o;2478:286:28:-;2539:14;;2566:169;2587:2;2583:1;:6;2566:169;;;2718:1;2722;2718:5;2699:4;2708:3;2704:1;:7;2699:13;;;;;;;;;;;;;;;2620:104;;;;;-1:-1:-1;;;2699:13:28;;;;;;;2621:91;;2620:104;2610:114;;;;;2621:75;2591:3;2566:169;;;2478:286;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MINT_AMOUNT()": "5427789c",
    "MULTIPLIER()": "059f8b16",
    "SATS_TO_TOKENS()": "fa2dedec",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "canRedeemUTXO(bytes32,bytes20,uint8,uint256,bytes32[])": "ca193e4d",
    "canRedeemUTXOHash(bytes32,bytes32[])": "7f761472",
    "decimals()": "313ce567",
    "decreaseApproval(address,uint256)": "66188463",
    "ecdsaVerify(address,bytes,uint8,bytes32,bytes32)": "ce267b55",
    "increaseApproval(address,uint256)": "d73dd623",
    "maximumRedeemable()": "08b4312b",
    "multiplier()": "1b3ed722",
    "name()": "06fdde03",
    "pubKeyToBitcoinAddress(bytes,bool)": "e073ef69",
    "pubKeyToEthereumAddress(bytes)": "5418796c",
    "redeemUTXO(bytes32,uint8,uint256,bytes32[],bytes,bool,uint8,bytes32,bytes32)": "782520dd",
    "releaseTokens(address)": "87b0be48",
    "rootUTXOMerkleTreeHash()": "e6997f6d",
    "symbol()": "95d89b41",
    "totalRedeemed()": "f35dad40",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "validateSignature(bytes32,uint8,bytes32,bytes32,address)": "af1d06e8",
    "verifyProof(bytes32[],bytes32)": "b80ac7df"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumRedeemable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"bytes\"}],\"name\":\"pubKeyToEthereumAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINT_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txid\",\"type\":\"bytes32\"},{\"name\":\"outputIndex\",\"type\":\"uint8\"},{\"name\":\"satoshis\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"name\":\"pubKey\",\"type\":\"bytes\"},{\"name\":\"isCompressed\",\"type\":\"bool\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"redeemUTXO\",\"outputs\":[{\"name\":\"tokensRedeemed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"merkleLeafHash\",\"type\":\"bytes32\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"canRedeemUTXOHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"releaseTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"validateSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"name\":\"merkleLeafHash\",\"type\":\"bytes32\"}],\"name\":\"verifyProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"txid\",\"type\":\"bytes32\"},{\"name\":\"originalAddress\",\"type\":\"bytes20\"},{\"name\":\"outputIndex\",\"type\":\"uint8\"},{\"name\":\"satoshis\",\"type\":\"uint256\"},{\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"canRedeemUTXO\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"pubKey\",\"type\":\"bytes\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ecdsaVerify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"bytes\"},{\"name\":\"isCompressed\",\"type\":\"bool\"}],\"name\":\"pubKeyToBitcoinAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes20\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rootUTXOMerkleTreeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRedeemed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SATS_TO_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"name\":\"totalUtxoAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"txid\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"outputIndex\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"satoshis\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"name\":\"pubKey\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"s\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"UTXORedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Project Wyvern Developers\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"_value\":\"The amount of token to be burned.\"}},\"canRedeemUTXO(bytes32,bytes20,uint8,uint256,bytes32[])\":{\"details\":\"Convenience helper function to check if a UTXO can be redeemed\",\"params\":{\"originalAddress\":\"Raw Bitcoin address (no base58-check encoding)\",\"outputIndex\":\"Output index of UTXO\",\"proof\":\"Merkle tree proof\",\"satoshis\":\"Amount of UTXO in satoshis\",\"txid\":\"Transaction hash\"},\"return\":\"Whether or not the UTXO can be redeemed\"},\"canRedeemUTXOHash(bytes32,bytes32[])\":{\"details\":\"Verify that a UTXO with the specified Merkle leaf hash can be redeemed\",\"params\":{\"merkleLeafHash\":\"Merkle tree hash of the UTXO to be checked\",\"proof\":\"Merkle tree proof\"},\"return\":\"Whether or not the UTXO with the specified hash can be redeemed\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"ecdsaVerify(address,bytes,uint8,bytes32,bytes32)\":{\"details\":\"Validate that the hash of a provided address was signed by the ECDSA public key associated with the specified Ethereum address\",\"params\":{\"addr\":\"Address signed\",\"pubKey\":\"Uncompressed ECDSA public key claiming to have created this signature\",\"r\":\"r parameter of ECDSA signature\",\"s\":\"s parameter of ECDSA signature\",\"v\":\"v parameter of ECDSA signature\"},\"return\":\"Whether or not the signature was valid\"},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"pubKeyToBitcoinAddress(bytes,bool)\":{\"details\":\"Calculate the Bitcoin-style address associated with an ECDSA public key\",\"params\":{\"isCompressed\":\"Whether or not the Bitcoin address was generated from a compressed key\",\"pubKey\":\"ECDSA public key to convert\"},\"return\":\"Raw Bitcoin address (no base58-check encoding)\"},\"pubKeyToEthereumAddress(bytes)\":{\"details\":\"Convert an uncompressed ECDSA public key into an Ethereum address\",\"params\":{\"pubKey\":\"Uncompressed ECDSA public key to convert\"},\"return\":\"Ethereum address generated from the ECDSA public key\"},\"redeemUTXO(bytes32,uint8,uint256,bytes32[],bytes,bool,uint8,bytes32,bytes32)\":{\"details\":\"Redeem a UTXO, crediting a proportional amount of tokens (if valid) to the sending address\",\"params\":{\"isCompressed\":\"Whether the Bitcoin address was generated from a compressed public key\",\"outputIndex\":\"Output index of the UTXO\",\"proof\":\"Merkle tree proof\",\"pubKey\":\"Uncompressed ECDSA public key to which the UTXO was sent\",\"r\":\"r parameter of ECDSA signature\",\"s\":\"s parameter of ECDSA signature\",\"satoshis\":\"Amount of UTXO in satoshis\",\"txid\":\"Transaction hash\",\"v\":\"v parameter of ECDSA signature\"},\"return\":\"The number of tokens redeemed, if successful\"},\"releaseTokens(address)\":{\"details\":\"Release the previously specified amount of tokens to the provided address\",\"params\":{\"destination\":\"Address for which tokens will be released (minted) \"}},\"totalSupply()\":{\"details\":\"total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"validateSignature(bytes32,uint8,bytes32,bytes32,address)\":{\"details\":\"Validate that a provided ECSDA signature was signed by the specified address\",\"params\":{\"expected\":\"Address claiming to have created this signature\",\"hash\":\"Hash of signed data\",\"r\":\"r parameter of ECDSA signature\",\"s\":\"s parameter of ECDSA signature\",\"v\":\"v parameter of ECDSA signature\"},\"return\":\"Whether or not the signature was valid\"},\"verifyProof(bytes32[],bytes32)\":{\"details\":\"Verify a Merkle proof using the UTXO Merkle tree\",\"params\":{\"merkleLeafHash\":\"Hash asserted to be present in the Merkle tree\",\"proof\":\"Generated Merkle tree proof\"},\"return\":\"Whether or not the proof is valid\"}},\"title\":\"WyvernToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/WyvernToken.sol\":\"WyvernToken\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/WyvernToken.sol\":{\"keccak256\":\"0x9e419bde76efbaa9537cd3c89c64c9b4088dcb64793dc61eb175c511fb327f69\",\"urls\":[\"bzzr://f754f13f12b733c11801ae52b8f92ff0c14f8b0167a11fcfca3f793e44d8b05e\"]},\"contracts/token/DelayedReleaseToken.sol\":{\"keccak256\":\"0xb6d2d5f84e82751215e802547c695604d373ccd0312b4ac0c6d9be90862208e8\",\"urls\":[\"bzzr://425005bd5f7cd81fc34528534d40ec96635a5801dbed606758231b16a6437597\"]},\"contracts/token/UTXORedeemableToken.sol\":{\"keccak256\":\"0x9543472e4033172dae54229e30af5f2eb4c1d5a796f9bb1242a70880d1b68854\",\"urls\":[\"bzzr://89493a770333a6107b9f584ab0838b9a116d25f5aa335720beb2936b983201a9\"]},\"lib/openzeppelin-contracts/contracts/MerkleProof.sol\":{\"keccak256\":\"0x976d8be204d5c1ee134f8660cae58400cbab6d995f9be5b0fd577e6942dc6b7d\",\"urls\":[\"bzzr://cbe94cbfc6708ef1099287508f399c2d3d34a2138007a3d185767b02498ccc68\"]},\"lib/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1\",\"urls\":[\"bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xa1a882b859b5ceac4a879b4820bf5c2eeeee823b563da42abac5ef119fd6e39e\",\"urls\":[\"bzzr://777c837dedf60ac041c14fba015a09803f1e855f5c1203f9952846586c151d9f\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/BurnableToken.sol\":{\"keccak256\":\"0xf42eed5730ab6b51d8383caea14e671afd4da5439295477f80703ff955875d01\",\"urls\":[\"bzzr://9c629bae4514a61aced7a09835b3bfbbcec23a36a2f390b0168b3c292eb03f6a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd48f887d15d0411901fc331e74a25d7afa63d89a1257e8e3f43ce1b1e8f4a1e3\",\"urls\":[\"bzzr://09c28b5e4b9323a3675abe0d2f53d78ee30b96f20add8b9432f870df3c8e1970\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0xa36ddb4cd5f04f0f5b7f344819267dd5500467d58949dd012a85876233c9314e\",\"urls\":[\"bzzr://02ed45f8a66dde083a6fae1b27a4f37605c81e3b8a26b7b16dab9537f901535c\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf4ae4ed0fd71f15329df75d165c68afc24385262abbf323f1396ee681f72073d\",\"urls\":[\"bzzr://15200cd33a2959a02dee7bf31c925c5e49ee9df99e463e3007c0e398fc0bc349\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.23+commit.124ca40d"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MULTIPLIER",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maximumRedeemable",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multiplier",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "pubKey",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "pubKeyToEthereumAddress",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINT_AMOUNT",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "txid",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "outputIndex",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "satoshis",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": null,
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": null,
              "name": "isCompressed",
              "type": "bool"
            },
            {
              "internalType": null,
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemUTXO",
          "outputs": [
            {
              "internalType": null,
              "name": "tokensRedeemed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "merkleLeafHash",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canRedeemUTXOHash",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "destination",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "expected",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateSignature",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": null,
              "name": "merkleLeafHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyProof",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "txid",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "originalAddress",
              "type": "bytes20"
            },
            {
              "internalType": null,
              "name": "outputIndex",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "satoshis",
              "type": "uint256"
            },
            {
              "internalType": null,
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canRedeemUTXO",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": null,
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "ecdsaVerify",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseApproval",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": null,
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": null,
              "name": "isCompressed",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "pubKeyToBitcoinAddress",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes20"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rootUTXOMerkleTreeHash",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalRedeemed",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SATS_TO_TOKENS",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "totalUtxoAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "txid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "outputIndex",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "satoshis",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "proof",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "pubKey",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "v",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "r",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "s",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "redeemer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UTXORedeemed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "destination",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": null,
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensReleased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": null,
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        }
      ],
      "devdoc": {
        "methods": {
          "allowance(address,address)": {
            "details": "Function to check the amount of tokens that an owner allowed to a spender.",
            "params": {
              "_owner": "address The address which owns the funds.",
              "_spender": "address The address which will spend the funds."
            },
            "return": "A uint256 specifying the amount of tokens still available for the spender."
          },
          "approve(address,uint256)": {
            "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
            "params": {
              "_spender": "The address which will spend the funds.",
              "_value": "The amount of tokens to be spent."
            }
          },
          "balanceOf(address)": {
            "details": "Gets the balance of the specified address.",
            "params": {
              "_owner": "The address to query the the balance of."
            },
            "return": "An uint256 representing the amount owned by the passed address."
          },
          "burn(uint256)": {
            "details": "Burns a specific amount of tokens.",
            "params": {
              "_value": "The amount of token to be burned."
            }
          },
          "canRedeemUTXO(bytes32,bytes20,uint8,uint256,bytes32[])": {
            "details": "Convenience helper function to check if a UTXO can be redeemed",
            "params": {
              "originalAddress": "Raw Bitcoin address (no base58-check encoding)",
              "outputIndex": "Output index of UTXO",
              "proof": "Merkle tree proof",
              "satoshis": "Amount of UTXO in satoshis",
              "txid": "Transaction hash"
            },
            "return": "Whether or not the UTXO can be redeemed"
          },
          "canRedeemUTXOHash(bytes32,bytes32[])": {
            "details": "Verify that a UTXO with the specified Merkle leaf hash can be redeemed",
            "params": {
              "merkleLeafHash": "Merkle tree hash of the UTXO to be checked",
              "proof": "Merkle tree proof"
            },
            "return": "Whether or not the UTXO with the specified hash can be redeemed"
          },
          "decreaseApproval(address,uint256)": {
            "details": "Decrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_spender": "The address which will spend the funds.",
              "_subtractedValue": "The amount of tokens to decrease the allowance by."
            }
          },
          "ecdsaVerify(address,bytes,uint8,bytes32,bytes32)": {
            "details": "Validate that the hash of a provided address was signed by the ECDSA public key associated with the specified Ethereum address",
            "params": {
              "addr": "Address signed",
              "pubKey": "Uncompressed ECDSA public key claiming to have created this signature",
              "r": "r parameter of ECDSA signature",
              "s": "s parameter of ECDSA signature",
              "v": "v parameter of ECDSA signature"
            },
            "return": "Whether or not the signature was valid"
          },
          "increaseApproval(address,uint256)": {
            "details": "Increase the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
            "params": {
              "_addedValue": "The amount of tokens to increase the allowance by.",
              "_spender": "The address which will spend the funds."
            }
          },
          "pubKeyToBitcoinAddress(bytes,bool)": {
            "details": "Calculate the Bitcoin-style address associated with an ECDSA public key",
            "params": {
              "isCompressed": "Whether or not the Bitcoin address was generated from a compressed key",
              "pubKey": "ECDSA public key to convert"
            },
            "return": "Raw Bitcoin address (no base58-check encoding)"
          },
          "pubKeyToEthereumAddress(bytes)": {
            "details": "Convert an uncompressed ECDSA public key into an Ethereum address",
            "params": {
              "pubKey": "Uncompressed ECDSA public key to convert"
            },
            "return": "Ethereum address generated from the ECDSA public key"
          },
          "redeemUTXO(bytes32,uint8,uint256,bytes32[],bytes,bool,uint8,bytes32,bytes32)": {
            "details": "Redeem a UTXO, crediting a proportional amount of tokens (if valid) to the sending address",
            "params": {
              "isCompressed": "Whether the Bitcoin address was generated from a compressed public key",
              "outputIndex": "Output index of the UTXO",
              "proof": "Merkle tree proof",
              "pubKey": "Uncompressed ECDSA public key to which the UTXO was sent",
              "r": "r parameter of ECDSA signature",
              "s": "s parameter of ECDSA signature",
              "satoshis": "Amount of UTXO in satoshis",
              "txid": "Transaction hash",
              "v": "v parameter of ECDSA signature"
            },
            "return": "The number of tokens redeemed, if successful"
          },
          "releaseTokens(address)": {
            "details": "Release the previously specified amount of tokens to the provided address",
            "params": {
              "destination": "Address for which tokens will be released (minted) "
            }
          },
          "totalSupply()": {
            "details": "total number of tokens in existence"
          },
          "transfer(address,uint256)": {
            "details": "transfer token for a specified address",
            "params": {
              "_to": "The address to transfer to.",
              "_value": "The amount to be transferred."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfer tokens from one address to another",
            "params": {
              "_from": "address The address which you want to send tokens from",
              "_to": "address The address which you want to transfer to",
              "_value": "uint256 the amount of tokens to be transferred"
            }
          },
          "validateSignature(bytes32,uint8,bytes32,bytes32,address)": {
            "details": "Validate that a provided ECSDA signature was signed by the specified address",
            "params": {
              "expected": "Address claiming to have created this signature",
              "hash": "Hash of signed data",
              "r": "r parameter of ECDSA signature",
              "s": "s parameter of ECDSA signature",
              "v": "v parameter of ECDSA signature"
            },
            "return": "Whether or not the signature was valid"
          },
          "verifyProof(bytes32[],bytes32)": {
            "details": "Verify a Merkle proof using the UTXO Merkle tree",
            "params": {
              "merkleLeafHash": "Hash asserted to be present in the Merkle tree",
              "proof": "Generated Merkle tree proof"
            },
            "return": "Whether or not the proof is valid"
          }
        }
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/WyvernToken.sol": "WyvernToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/WyvernToken.sol": {
        "keccak256": "0x9e419bde76efbaa9537cd3c89c64c9b4088dcb64793dc61eb175c511fb327f69",
        "urls": [
          "bzzr://f754f13f12b733c11801ae52b8f92ff0c14f8b0167a11fcfca3f793e44d8b05e"
        ],
        "license": null
      },
      "contracts/token/DelayedReleaseToken.sol": {
        "keccak256": "0xb6d2d5f84e82751215e802547c695604d373ccd0312b4ac0c6d9be90862208e8",
        "urls": [
          "bzzr://425005bd5f7cd81fc34528534d40ec96635a5801dbed606758231b16a6437597"
        ],
        "license": null
      },
      "contracts/token/UTXORedeemableToken.sol": {
        "keccak256": "0x9543472e4033172dae54229e30af5f2eb4c1d5a796f9bb1242a70880d1b68854",
        "urls": [
          "bzzr://89493a770333a6107b9f584ab0838b9a116d25f5aa335720beb2936b983201a9"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/MerkleProof.sol": {
        "keccak256": "0x976d8be204d5c1ee134f8660cae58400cbab6d995f9be5b0fd577e6942dc6b7d",
        "urls": [
          "bzzr://cbe94cbfc6708ef1099287508f399c2d3d34a2138007a3d185767b02498ccc68"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/math/SafeMath.sol": {
        "keccak256": "0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1",
        "urls": [
          "bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/BasicToken.sol": {
        "keccak256": "0xa1a882b859b5ceac4a879b4820bf5c2eeeee823b563da42abac5ef119fd6e39e",
        "urls": [
          "bzzr://777c837dedf60ac041c14fba015a09803f1e855f5c1203f9952846586c151d9f"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/BurnableToken.sol": {
        "keccak256": "0xf42eed5730ab6b51d8383caea14e671afd4da5439295477f80703ff955875d01",
        "urls": [
          "bzzr://9c629bae4514a61aced7a09835b3bfbbcec23a36a2f390b0168b3c292eb03f6a"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xd48f887d15d0411901fc331e74a25d7afa63d89a1257e8e3f43ce1b1e8f4a1e3",
        "urls": [
          "bzzr://09c28b5e4b9323a3675abe0d2f53d78ee30b96f20add8b9432f870df3c8e1970"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20Basic.sol": {
        "keccak256": "0xa36ddb4cd5f04f0f5b7f344819267dd5500467d58949dd012a85876233c9314e",
        "urls": [
          "bzzr://02ed45f8a66dde083a6fae1b27a4f37605c81e3b8a26b7b16dab9537f901535c"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/StandardToken.sol": {
        "keccak256": "0xf4ae4ed0fd71f15329df75d165c68afc24385262abbf323f1396ee681f72073d",
        "urls": [
          "bzzr://15200cd33a2959a02dee7bf31c925c5e49ee9df99e463e3007c0e398fc0bc349"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/WyvernToken.sol",
    "id": 544,
    "exportedSymbols": {
      "WyvernToken": [
        543
      ]
    },
    "nodeType": "SourceUnit",
    "src": "44:1620:9",
    "nodes": [
      {
        "id": 457,
        "nodeType": "PragmaDirective",
        "src": "44:23:9",
        "nodes": [],
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 458,
        "nodeType": "ImportDirective",
        "src": "69:62:9",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-contracts/token/ERC20/BurnableToken.sol",
        "scope": 544,
        "sourceUnit": 6675,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 459,
        "nodeType": "ImportDirective",
        "src": "133:41:9",
        "nodes": [],
        "absolutePath": "contracts/token/UTXORedeemableToken.sol",
        "file": "./token/UTXORedeemableToken.sol",
        "scope": 544,
        "sourceUnit": 6265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 460,
        "nodeType": "ImportDirective",
        "src": "175:41:9",
        "nodes": [],
        "absolutePath": "contracts/token/DelayedReleaseToken.sol",
        "file": "./token/DelayedReleaseToken.sol",
        "scope": 544,
        "sourceUnit": 5844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 543,
        "nodeType": "ContractDefinition",
        "src": "288:1375:9",
        "nodes": [
          {
            "id": 469,
            "nodeType": "VariableDeclaration",
            "src": "375:38:9",
            "nodes": [],
            "constant": true,
            "name": "decimals",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 467,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "375:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 468,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "411:2:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "id": 472,
            "nodeType": "VariableDeclaration",
            "src": "419:58:9",
            "nodes": [],
            "constant": true,
            "name": "name",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 470,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "419:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50726f6a6563742057797665726e20546f6b656e",
              "id": 471,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "455:22:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0f1741f78e1673292af177d8edaf535a9a4a707c967232ebdee4807eb6eea29a",
                "typeString": "literal_string \"Project Wyvern Token\""
              },
              "value": "Project Wyvern Token"
            },
            "visibility": "public"
          },
          {
            "id": 475,
            "nodeType": "VariableDeclaration",
            "src": "483:41:9",
            "nodes": [],
            "constant": true,
            "name": "symbol",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 473,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "483:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "575956",
              "id": 474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "519:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_589970a34b4a6057fc6115d028a76a2fd033dbd5445f36016cca438486031b83",
                "typeString": "literal_string \"WYV\""
              },
              "value": "WYV"
            },
            "visibility": "public"
          },
          {
            "id": 478,
            "nodeType": "VariableDeclaration",
            "src": "570:41:9",
            "nodes": [],
            "constant": true,
            "name": "MULTIPLIER",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 476,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "570:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "610:1:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 491,
            "nodeType": "VariableDeclaration",
            "src": "677:81:9",
            "nodes": [],
            "constant": true,
            "name": "SATS_TO_TOKENS",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 479,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "677:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 490,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 485,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "id": 480,
                  "name": "MULTIPLIER",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 478,
                  "src": "717:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "components": [
                    {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:2:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "737:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "731:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  ],
                  "id": 484,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "730:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "717:29:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "750:2:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "756:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "750:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  }
                ],
                "id": 489,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "749:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                }
              },
              "src": "717:41:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 501,
            "nodeType": "VariableDeclaration",
            "src": "851:79:9",
            "nodes": [],
            "constant": true,
            "name": "MINT_AMOUNT",
            "scope": 543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 492,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "851:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 495,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "32303030303030",
                  "id": 493,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "891:7:9",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2000000_by_1",
                    "typeString": "int_const 2000000"
                  },
                  "value": "2000000"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 494,
                  "name": "MULTIPLIER",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 478,
                  "src": "901:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "891:20:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "915:2:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "921:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "915:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 499,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "914:16:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "891:39:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 542,
            "nodeType": "FunctionDefinition",
            "src": "1116:544:9",
            "nodes": [],
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "1178:482:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 509,
                      "name": "utxoTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 542,
                      "src": "1258:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 508,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1258:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 513,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "SATS_TO_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "1276:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 511,
                      "name": "totalUtxoAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "1293:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1276:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:50:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "temporaryAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5790,
                      "src": "1364:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 515,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7011,
                        "src": "1381:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1381:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1364:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:27:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "numberOfDelayedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5795,
                      "src": "1401:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "MINT_AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "1425:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "utxoTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "1439:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1425:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1401:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "rootUTXOMerkleTreeHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5852,
                      "src": "1505:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "1530:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1505:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:35:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 529,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6522,
                      "src": "1550:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 530,
                      "name": "MINT_AMOUNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "1565:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1550:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:26:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 533,
                      "name": "maximumRedeemable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5863,
                      "src": "1586:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "utxoTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "1606:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1586:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 537,
                      "name": "multiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
                      "src": "1626:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 538,
                      "name": "SATS_TO_TOKENS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "1639:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1626:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:27:9"
                }
              ]
            },
            "documentation": "@dev Initialize the Wyvern token\n@param merkleRoot Merkle tree root of the UTXO set\n@param totalUtxoAmount Total satoshis of the UTXO set",
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "1129:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "name": "totalUtxoAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "1149:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:42:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:9"
            },
            "scope": 543,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 461,
              "name": "DelayedReleaseToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5843,
              "src": "312:19:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelayedReleaseToken_$5843",
                "typeString": "contract DelayedReleaseToken"
              }
            },
            "id": 462,
            "nodeType": "InheritanceSpecifier",
            "src": "312:19:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 463,
              "name": "UTXORedeemableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6264,
              "src": "333:19:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UTXORedeemableToken_$6264",
                "typeString": "contract UTXORedeemableToken"
              }
            },
            "id": 464,
            "nodeType": "InheritanceSpecifier",
            "src": "333:19:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 465,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6674,
              "src": "354:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$6674",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 466,
            "nodeType": "InheritanceSpecifier",
            "src": "354:13:9"
          }
        ],
        "contractDependencies": [
          5843,
          6264,
          6603,
          6674,
          6717,
          6749,
          6996
        ],
        "contractKind": "contract",
        "documentation": "@title WyvernToken\n@author Project Wyvern Developers",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          543,
          6674,
          6264,
          5843,
          6996,
          6603,
          6717,
          6749
        ],
        "name": "WyvernToken",
        "scope": 544
      }
    ]
  },
  "id": 9
}